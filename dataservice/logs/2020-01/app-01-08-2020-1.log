2020-01-08 22:22:31.972 [main] [StartupInfoLogger.java:50] INFO  com.tjhnode.DataserviceApplication - Starting DataserviceApplication on tjh with PID 9268 (D:\JavaProject\dataservice\target\classes started by My in D:\JavaProject\dataservice) 
2020-01-08 22:22:32.067 [main] [SpringApplication.java:675] INFO  com.tjhnode.DataserviceApplication - No active profile set, falling back to default profiles: default 
2020-01-08 22:22:37.053 [main] [RepositoryConfigurationDelegate.java:244] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode! 
2020-01-08 22:22:37.063 [main] [RepositoryConfigurationDelegate.java:126] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode. 
2020-01-08 22:22:37.164 [main] [RepositoryConfigurationDelegate.java:182] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 50ms. Found 0 repository interfaces. 
2020-01-08 22:22:38.139 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$86f378e7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 22:22:38.304 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 22:22:38.308 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$f081e9b8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 22:22:38.315 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 22:22:38.327 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 22:22:39.731 [main] [TomcatWebServer.java:90] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 81 (http) 
2020-01-08 22:22:39.751 [main] [DirectJDKLog.java:173] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-81"] 
2020-01-08 22:22:39.770 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat] 
2020-01-08 22:22:39.771 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16] 
2020-01-08 22:22:39.780 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded APR based Apache Tomcat Native library [1.2.21] using APR version [1.6.5]. 
2020-01-08 22:22:39.781 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true]. 
2020-01-08 22:22:39.781 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true] 
2020-01-08 22:22:40.846 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 1.0.2q  20 Nov 2018] 
2020-01-08 22:22:41.037 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext 
2020-01-08 22:22:41.037 [main] [ServletWebServerApplicationContext.java:296] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 8726 ms 
2020-01-08 22:22:41.251 [main] [DynamicDataSourceCreator.java:113] INFO  com.baomidou.dynamic.datasource.DynamicDataSourceCreator - 动态数据源-检测到druid存在,如配置中未指定type,druid会默认配置 
2020-01-08 22:22:43.406 [main] [DruidDataSource.java:930] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1,master} inited 
2020-01-08 22:22:43.473 [main] [DruidDataSource.java:930] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2,appconfig} inited 
2020-01-08 22:22:43.568 [main] [DruidDataSource.java:930] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3,applog} inited 
2020-01-08 22:22:43.625 [main] [DruidDataSource.java:930] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4,app} inited 
2020-01-08 22:22:43.625 [main] [DynamicRoutingDataSource.java:203] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 初始共加载 4 个数据源 
2020-01-08 22:22:43.626 [main] [DynamicRoutingDataSource.java:142] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 动态数据源-加载 appconfig 成功 
2020-01-08 22:22:43.626 [main] [DynamicRoutingDataSource.java:142] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 动态数据源-加载 app 成功 
2020-01-08 22:22:43.626 [main] [DynamicRoutingDataSource.java:142] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 动态数据源-加载 master 成功 
2020-01-08 22:22:43.626 [main] [DynamicRoutingDataSource.java:142] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 动态数据源-加载 applog 成功 
2020-01-08 22:22:43.626 [main] [DynamicRoutingDataSource.java:212] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 appconfig 
2020-01-08 22:22:44.049 [main] [TableInfoHelper.java:250] WARN  com.baomidou.mybatisplus.core.toolkit.TableInfoHelper - Warn: Could not find @TableId in Class: com.tjhnode.dataservice.model.entities.ClassificationModel. 
2020-01-08 22:22:44.095 [main] [TableInfoHelper.java:250] WARN  com.baomidou.mybatisplus.core.toolkit.TableInfoHelper - Warn: Could not find @TableId in Class: com.tjhnode.dataservice.model.entities.ConfigItemModel. 
2020-01-08 22:22:44.130 [main] [TableInfoHelper.java:250] WARN  com.baomidou.mybatisplus.core.toolkit.TableInfoHelper - Warn: Could not find @TableId in Class: com.tjhnode.dataservice.model.entities.Enumparameters. 
2020-01-08 22:22:44.160 [main] [TableInfoHelper.java:250] WARN  com.baomidou.mybatisplus.core.toolkit.TableInfoHelper - Warn: Could not find @TableId in Class: com.tjhnode.dataservice.model.entities.ParametersConfig. 
2020-01-08 22:22:44.190 [main] [TableInfoHelper.java:250] WARN  com.baomidou.mybatisplus.core.toolkit.TableInfoHelper - Warn: Could not find @TableId in Class: com.tjhnode.dataservice.model.entities.SqlConfigModel. 
2020-01-08 22:22:45.092 [main] [PropertySourcedRequestMappingHandlerMapping.java:69] INFO  springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)] 
2020-01-08 22:22:45.347 [main] [ExecutorConfigurationSupport.java:171] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor' 
2020-01-08 22:22:46.368 [main] [DocumentationPluginsBootstrapper.java:147] INFO  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Context refreshed 
2020-01-08 22:22:46.410 [main] [DocumentationPluginsBootstrapper.java:150] INFO  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s) 
2020-01-08 22:22:46.484 [main] [ApiListingReferenceScanner.java:41] INFO  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references 
2020-01-08 22:22:46.711 [main] [CachingOperationNameGenerator.java:40] INFO  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteConfigItemUsingPOST_1 
2020-01-08 22:22:46.722 [main] [CachingOperationNameGenerator.java:40] INFO  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: insertConfigItemUsingPOST_1 
2020-01-08 22:22:46.724 [main] [CachingOperationNameGenerator.java:40] INFO  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateConfigItemUsingPOST_1 
2020-01-08 22:22:46.751 [main] [DirectJDKLog.java:173] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-81"] 
2020-01-08 22:22:46.791 [main] [TomcatWebServer.java:204] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 81 (http) with context path '' 
2020-01-08 22:22:46.795 [main] [StartupInfoLogger.java:59] INFO  com.tjhnode.DataserviceApplication - Started DataserviceApplication in 17.499 seconds (JVM running for 24.606) 
2020-01-08 22:25:11.647 [http-nio-81-exec-1] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet' 
2020-01-08 22:25:11.648 [http-nio-81-exec-1] [FrameworkServlet.java:524] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet' 
2020-01-08 22:25:11.660 [http-nio-81-exec-1] [FrameworkServlet.java:546] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 12 ms 
2020-01-08 22:27:26.722 [Thread-39] [ExecutorConfigurationSupport.java:208] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor' 
2020-01-08 22:27:26.725 [Thread-39] [DynamicRoutingDataSource.java:182] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - closing dynamicDatasource  ing.... 
2020-01-08 22:27:26.734 [Thread-39] [DruidDataSource.java:1825] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closed 
2020-01-08 22:27:26.740 [Thread-39] [DruidDataSource.java:1825] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4} closed 
2020-01-08 22:27:26.745 [Thread-39] [DruidDataSource.java:1825] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed 
2020-01-08 22:27:26.751 [Thread-39] [DruidDataSource.java:1825] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3} closed 
2020-01-08 22:29:25.732 [main] [StartupInfoLogger.java:50] INFO  com.tjhnode.DataserviceApplication - Starting DataserviceApplication on tjh with PID 2944 (D:\JavaProject\dataservice\target\classes started by My in D:\JavaProject\dataservice) 
2020-01-08 22:29:25.741 [main] [SpringApplication.java:675] INFO  com.tjhnode.DataserviceApplication - No active profile set, falling back to default profiles: default 
2020-01-08 22:29:27.216 [main] [RepositoryConfigurationDelegate.java:244] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode! 
2020-01-08 22:29:27.222 [main] [RepositoryConfigurationDelegate.java:126] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode. 
2020-01-08 22:29:27.268 [main] [RepositoryConfigurationDelegate.java:182] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 25ms. Found 0 repository interfaces. 
2020-01-08 22:29:27.759 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d8b145d0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 22:29:27.819 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 22:29:27.822 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$423fb6a1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 22:29:27.828 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 22:29:27.834 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 22:29:28.248 [main] [TomcatWebServer.java:90] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 81 (http) 
2020-01-08 22:29:28.274 [main] [DirectJDKLog.java:173] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-81"] 
2020-01-08 22:29:28.293 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat] 
2020-01-08 22:29:28.294 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16] 
2020-01-08 22:29:28.309 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded APR based Apache Tomcat Native library [1.2.21] using APR version [1.6.5]. 
2020-01-08 22:29:28.310 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true]. 
2020-01-08 22:29:28.310 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true] 
2020-01-08 22:29:38.931 [main] [StartupInfoLogger.java:50] INFO  com.tjhnode.DataserviceApplication - Starting DataserviceApplication on tjh with PID 7600 (D:\JavaProject\dataservice\target\classes started by My in D:\JavaProject\dataservice) 
2020-01-08 22:29:38.942 [main] [SpringApplication.java:675] INFO  com.tjhnode.DataserviceApplication - No active profile set, falling back to default profiles: default 
2020-01-08 22:29:40.407 [main] [RepositoryConfigurationDelegate.java:244] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode! 
2020-01-08 22:29:40.412 [main] [RepositoryConfigurationDelegate.java:126] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode. 
2020-01-08 22:29:40.454 [main] [RepositoryConfigurationDelegate.java:182] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 26ms. Found 0 repository interfaces. 
2020-01-08 22:29:40.841 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$eca1b184] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 22:29:40.907 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 22:29:40.909 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$56302255] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 22:29:40.922 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 22:29:40.928 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 22:29:41.326 [main] [TomcatWebServer.java:90] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 81 (http) 
2020-01-08 22:29:41.340 [main] [DirectJDKLog.java:173] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-81"] 
2020-01-08 22:29:41.349 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat] 
2020-01-08 22:29:41.350 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16] 
2020-01-08 22:29:41.362 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded APR based Apache Tomcat Native library [1.2.21] using APR version [1.6.5]. 
2020-01-08 22:29:41.363 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true]. 
2020-01-08 22:29:41.363 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true] 
2020-01-08 22:29:42.453 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 1.0.2q  20 Nov 2018] 
2020-01-08 22:29:42.629 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext 
2020-01-08 22:29:42.630 [main] [ServletWebServerApplicationContext.java:296] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3569 ms 
2020-01-08 22:29:42.823 [main] [DynamicDataSourceCreator.java:113] INFO  com.baomidou.dynamic.datasource.DynamicDataSourceCreator - 动态数据源-检测到druid存在,如配置中未指定type,druid会默认配置 
2020-01-08 22:29:44.695 [main] [DruidDataSource.java:930] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1,master} inited 
2020-01-08 22:29:44.767 [main] [DruidDataSource.java:930] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2,appconfig} inited 
2020-01-08 22:29:44.820 [main] [DruidDataSource.java:930] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3,applog} inited 
2020-01-08 22:29:44.889 [main] [DruidDataSource.java:930] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4,app} inited 
2020-01-08 22:29:44.889 [main] [DynamicRoutingDataSource.java:203] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 初始共加载 4 个数据源 
2020-01-08 22:29:44.889 [main] [DynamicRoutingDataSource.java:142] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 动态数据源-加载 appconfig 成功 
2020-01-08 22:29:44.890 [main] [DynamicRoutingDataSource.java:142] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 动态数据源-加载 app 成功 
2020-01-08 22:29:44.890 [main] [DynamicRoutingDataSource.java:142] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 动态数据源-加载 master 成功 
2020-01-08 22:29:44.890 [main] [DynamicRoutingDataSource.java:142] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 动态数据源-加载 applog 成功 
2020-01-08 22:29:44.890 [main] [DynamicRoutingDataSource.java:212] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 appconfig 
2020-01-08 22:29:45.337 [main] [TableInfoHelper.java:250] WARN  com.baomidou.mybatisplus.core.toolkit.TableInfoHelper - Warn: Could not find @TableId in Class: com.tjhnode.dataservice.model.entities.ClassificationModel. 
2020-01-08 22:29:45.418 [main] [TableInfoHelper.java:250] WARN  com.baomidou.mybatisplus.core.toolkit.TableInfoHelper - Warn: Could not find @TableId in Class: com.tjhnode.dataservice.model.entities.ConfigItemModel. 
2020-01-08 22:29:45.457 [main] [TableInfoHelper.java:250] WARN  com.baomidou.mybatisplus.core.toolkit.TableInfoHelper - Warn: Could not find @TableId in Class: com.tjhnode.dataservice.model.entities.Enumparameters. 
2020-01-08 22:29:45.489 [main] [TableInfoHelper.java:250] WARN  com.baomidou.mybatisplus.core.toolkit.TableInfoHelper - Warn: Could not find @TableId in Class: com.tjhnode.dataservice.model.entities.ParametersConfig. 
2020-01-08 22:29:45.521 [main] [TableInfoHelper.java:250] WARN  com.baomidou.mybatisplus.core.toolkit.TableInfoHelper - Warn: Could not find @TableId in Class: com.tjhnode.dataservice.model.entities.SqlConfigModel. 
2020-01-08 22:29:46.087 [main] [PropertySourcedRequestMappingHandlerMapping.java:69] INFO  springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)] 
2020-01-08 22:29:46.248 [main] [ExecutorConfigurationSupport.java:171] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor' 
2020-01-08 22:29:46.963 [main] [DocumentationPluginsBootstrapper.java:147] INFO  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Context refreshed 
2020-01-08 22:29:46.979 [main] [DocumentationPluginsBootstrapper.java:150] INFO  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s) 
2020-01-08 22:29:47.019 [main] [ApiListingReferenceScanner.java:41] INFO  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references 
2020-01-08 22:29:47.276 [main] [CachingOperationNameGenerator.java:40] INFO  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteConfigItemUsingPOST_1 
2020-01-08 22:29:47.295 [main] [CachingOperationNameGenerator.java:40] INFO  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: insertConfigItemUsingPOST_1 
2020-01-08 22:29:47.297 [main] [CachingOperationNameGenerator.java:40] INFO  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateConfigItemUsingPOST_1 
2020-01-08 22:29:47.318 [main] [DirectJDKLog.java:173] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-81"] 
2020-01-08 22:29:47.360 [main] [TomcatWebServer.java:204] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 81 (http) with context path '' 
2020-01-08 22:29:47.366 [main] [StartupInfoLogger.java:59] INFO  com.tjhnode.DataserviceApplication - Started DataserviceApplication in 8.982 seconds (JVM running for 12.26) 
2020-01-08 22:31:56.103 [http-nio-81-exec-1] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet' 
2020-01-08 22:31:56.104 [http-nio-81-exec-1] [FrameworkServlet.java:524] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet' 
2020-01-08 22:31:56.114 [http-nio-81-exec-1] [FrameworkServlet.java:546] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 10 ms 
2020-01-08 22:34:53.408 [Thread-8] [ExecutorConfigurationSupport.java:208] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor' 
2020-01-08 22:34:53.411 [Thread-8] [DynamicRoutingDataSource.java:182] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - closing dynamicDatasource  ing.... 
2020-01-08 22:34:53.455 [Thread-8] [DruidDataSource.java:1825] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closed 
2020-01-08 22:34:53.465 [Thread-8] [DruidDataSource.java:1825] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4} closed 
2020-01-08 22:34:53.473 [Thread-8] [DruidDataSource.java:1825] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed 
2020-01-08 22:34:53.479 [Thread-8] [DruidDataSource.java:1825] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3} closed 
2020-01-08 22:35:00.644 [main] [StartupInfoLogger.java:50] INFO  com.tjhnode.DataserviceApplication - Starting DataserviceApplication on tjh with PID 1752 (D:\JavaProject\dataservice\target\classes started by My in D:\JavaProject\dataservice) 
2020-01-08 22:35:00.654 [main] [SpringApplication.java:675] INFO  com.tjhnode.DataserviceApplication - No active profile set, falling back to default profiles: default 
2020-01-08 22:35:01.752 [main] [RepositoryConfigurationDelegate.java:244] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode! 
2020-01-08 22:35:01.756 [main] [RepositoryConfigurationDelegate.java:126] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode. 
2020-01-08 22:35:01.794 [main] [RepositoryConfigurationDelegate.java:182] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 23ms. Found 0 repository interfaces. 
2020-01-08 22:35:02.120 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$8ff8cd9d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 22:35:02.182 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 22:35:02.185 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$f9873e6e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 22:35:02.191 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 22:35:02.197 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 22:35:02.613 [main] [TomcatWebServer.java:90] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 81 (http) 
2020-01-08 22:35:02.628 [main] [DirectJDKLog.java:173] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-81"] 
2020-01-08 22:35:02.635 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat] 
2020-01-08 22:35:02.636 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16] 
2020-01-08 22:35:02.643 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded APR based Apache Tomcat Native library [1.2.21] using APR version [1.6.5]. 
2020-01-08 22:35:02.643 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true]. 
2020-01-08 22:35:02.643 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true] 
2020-01-08 22:35:03.722 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 1.0.2q  20 Nov 2018] 
2020-01-08 22:35:03.863 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext 
2020-01-08 22:35:03.863 [main] [ServletWebServerApplicationContext.java:296] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3108 ms 
2020-01-08 22:35:04.074 [main] [DynamicDataSourceCreator.java:113] INFO  com.baomidou.dynamic.datasource.DynamicDataSourceCreator - 动态数据源-检测到druid存在,如配置中未指定type,druid会默认配置 
2020-01-08 22:35:06.065 [main] [DruidDataSource.java:930] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1,master} inited 
2020-01-08 22:35:06.130 [main] [DruidDataSource.java:930] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2,appconfig} inited 
2020-01-08 22:35:06.198 [main] [DruidDataSource.java:930] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3,applog} inited 
2020-01-08 22:35:06.256 [main] [DruidDataSource.java:930] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4,app} inited 
2020-01-08 22:35:06.257 [main] [DynamicRoutingDataSource.java:203] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 初始共加载 4 个数据源 
2020-01-08 22:35:06.257 [main] [DynamicRoutingDataSource.java:142] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 动态数据源-加载 appconfig 成功 
2020-01-08 22:35:06.257 [main] [DynamicRoutingDataSource.java:142] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 动态数据源-加载 app 成功 
2020-01-08 22:35:06.258 [main] [DynamicRoutingDataSource.java:142] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 动态数据源-加载 master 成功 
2020-01-08 22:35:06.258 [main] [DynamicRoutingDataSource.java:142] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 动态数据源-加载 applog 成功 
2020-01-08 22:35:06.258 [main] [DynamicRoutingDataSource.java:212] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 appconfig 
2020-01-08 22:35:06.292 [main] [AbstractApplicationContext.java:557] WARN  org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'classficationController': Unsatisfied dependency expressed through field 'classificationServiceImpl'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'classificationServiceImpl': Unsatisfied dependency expressed through field 'baseMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'classificationMapper' defined in file [D:\JavaProject\dataservice\target\classes\com\tjhnode\dataservice\mapper\ClassificationMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [com/baomidou/mybatisplus/autoconfigure/MybatisPlusAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.lang.IllegalStateException: SFunction 'configuration' and 'configLocation' can not specified with together 
2020-01-08 22:35:06.292 [main] [DynamicRoutingDataSource.java:182] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - closing dynamicDatasource  ing.... 
2020-01-08 22:35:06.304 [main] [DruidDataSource.java:1825] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closed 
2020-01-08 22:35:06.307 [main] [DruidDataSource.java:1825] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4} closed 
2020-01-08 22:35:06.309 [main] [DruidDataSource.java:1825] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed 
2020-01-08 22:35:06.312 [main] [DruidDataSource.java:1825] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3} closed 
2020-01-08 22:35:06.318 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat] 
2020-01-08 22:35:06.345 [main] [ConditionEvaluationReportLoggingListener.java:142] INFO  org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled. 
2020-01-08 22:35:06.694 [main] [SpringApplication.java:858] ERROR org.springframework.boot.SpringApplication - Application run failed 
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'classficationController': Unsatisfied dependency expressed through field 'classificationServiceImpl'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'classificationServiceImpl': Unsatisfied dependency expressed through field 'baseMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'classificationMapper' defined in file [D:\JavaProject\dataservice\target\classes\com\tjhnode\dataservice\mapper\ClassificationMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [com/baomidou/mybatisplus/autoconfigure/MybatisPlusAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.lang.IllegalStateException: SFunction 'configuration' and 'configLocation' can not specified with together
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877) ~[spring-context-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549) ~[spring-context-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142) ~[spring-boot-2.1.3.RELEASE.jar:2.1.3.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775) [spring-boot-2.1.3.RELEASE.jar:2.1.3.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397) [spring-boot-2.1.3.RELEASE.jar:2.1.3.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316) [spring-boot-2.1.3.RELEASE.jar:2.1.3.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260) [spring-boot-2.1.3.RELEASE.jar:2.1.3.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248) [spring-boot-2.1.3.RELEASE.jar:2.1.3.RELEASE]
	at com.tjhnode.DataserviceApplication.main(DataserviceApplication.java:12) [classes/:?]
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'classificationServiceImpl': Unsatisfied dependency expressed through field 'baseMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'classificationMapper' defined in file [D:\JavaProject\dataservice\target\classes\com\tjhnode\dataservice\mapper\ClassificationMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [com/baomidou/mybatisplus/autoconfigure/MybatisPlusAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.lang.IllegalStateException: SFunction 'configuration' and 'configLocation' can not specified with together
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	... 19 more
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'classificationMapper' defined in file [D:\JavaProject\dataservice\target\classes\com\tjhnode\dataservice\mapper\ClassificationMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [com/baomidou/mybatisplus/autoconfigure/MybatisPlusAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.lang.IllegalStateException: SFunction 'configuration' and 'configLocation' can not specified with together
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1499) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1379) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	... 19 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [com/baomidou/mybatisplus/autoconfigure/MybatisPlusAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.lang.IllegalStateException: SFunction 'configuration' and 'configLocation' can not specified with together
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:627) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:607) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1484) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1379) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	... 19 more
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.lang.IllegalStateException: SFunction 'configuration' and 'configLocation' can not specified with together
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:622) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:607) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1484) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1379) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	... 19 more
Caused by: java.lang.IllegalStateException: SFunction 'configuration' and 'configLocation' can not specified with together
	at org.springframework.util.Assert.state(Assert.java:73) ~[spring-core-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at com.baomidou.mybatisplus.extension.spring.MybatisSqlSessionFactoryBean.afterPropertiesSet(MybatisSqlSessionFactoryBean.java:395) ~[mybatis-plus-extension-3.0.6.jar:3.0.6]
	at com.baomidou.mybatisplus.extension.spring.MybatisSqlSessionFactoryBean.getObject(MybatisSqlSessionFactoryBean.java:690) ~[mybatis-plus-extension-3.0.6.jar:3.0.6]
	at com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration.sqlSessionFactory(MybatisPlusAutoConfiguration.java:165) ~[mybatis-plus-boot-starter-3.0.6.jar:3.0.6]
	at com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$cdc13a37.CGLIB$sqlSessionFactory$0(<generated>) ~[mybatis-plus-boot-starter-3.0.6.jar:3.0.6]
	at com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$cdc13a37$$FastClassBySpringCGLIB$$db187185.invoke(<generated>) ~[mybatis-plus-boot-starter-3.0.6.jar:3.0.6]
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244) ~[spring-core-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:363) ~[spring-context-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$cdc13a37.sqlSessionFactory(<generated>) ~[mybatis-plus-boot-starter-3.0.6.jar:3.0.6]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_131]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_131]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_131]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_131]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:622) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:607) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1484) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1379) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	... 19 more
2020-01-08 22:36:35.099 [main] [StartupInfoLogger.java:50] INFO  com.tjhnode.DataserviceApplication - Starting DataserviceApplication on tjh with PID 7828 (D:\JavaProject\dataservice\target\classes started by My in D:\JavaProject\dataservice) 
2020-01-08 22:36:35.110 [main] [SpringApplication.java:675] INFO  com.tjhnode.DataserviceApplication - No active profile set, falling back to default profiles: default 
2020-01-08 22:36:36.227 [main] [RepositoryConfigurationDelegate.java:244] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode! 
2020-01-08 22:36:36.231 [main] [RepositoryConfigurationDelegate.java:126] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode. 
2020-01-08 22:36:36.269 [main] [RepositoryConfigurationDelegate.java:182] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 22ms. Found 0 repository interfaces. 
2020-01-08 22:36:36.652 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c84e7e59] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 22:36:36.717 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 22:36:36.719 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$31dcef2a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 22:36:36.727 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 22:36:36.733 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 22:36:37.246 [main] [TomcatWebServer.java:90] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 81 (http) 
2020-01-08 22:36:37.266 [main] [DirectJDKLog.java:173] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-81"] 
2020-01-08 22:36:37.276 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat] 
2020-01-08 22:36:37.277 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16] 
2020-01-08 22:36:37.286 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded APR based Apache Tomcat Native library [1.2.21] using APR version [1.6.5]. 
2020-01-08 22:36:37.286 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true]. 
2020-01-08 22:36:37.286 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true] 
2020-01-08 22:36:38.383 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 1.0.2q  20 Nov 2018] 
2020-01-08 22:36:38.543 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext 
2020-01-08 22:36:38.543 [main] [ServletWebServerApplicationContext.java:296] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3338 ms 
2020-01-08 22:36:38.804 [main] [DynamicDataSourceCreator.java:113] INFO  com.baomidou.dynamic.datasource.DynamicDataSourceCreator - 动态数据源-检测到druid存在,如配置中未指定type,druid会默认配置 
2020-01-08 22:36:40.804 [main] [DruidDataSource.java:930] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1,master} inited 
2020-01-08 22:36:40.861 [main] [DruidDataSource.java:930] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2,appconfig} inited 
2020-01-08 22:36:40.913 [main] [DruidDataSource.java:930] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3,applog} inited 
2020-01-08 22:36:40.971 [main] [DruidDataSource.java:930] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4,app} inited 
2020-01-08 22:36:40.972 [main] [DynamicRoutingDataSource.java:203] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 初始共加载 4 个数据源 
2020-01-08 22:36:40.972 [main] [DynamicRoutingDataSource.java:142] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 动态数据源-加载 appconfig 成功 
2020-01-08 22:36:40.973 [main] [DynamicRoutingDataSource.java:142] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 动态数据源-加载 app 成功 
2020-01-08 22:36:40.973 [main] [DynamicRoutingDataSource.java:142] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 动态数据源-加载 master 成功 
2020-01-08 22:36:40.973 [main] [DynamicRoutingDataSource.java:142] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 动态数据源-加载 applog 成功 
2020-01-08 22:36:40.974 [main] [DynamicRoutingDataSource.java:212] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 appconfig 
2020-01-08 22:36:41.002 [main] [AbstractApplicationContext.java:557] WARN  org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'classficationController': Unsatisfied dependency expressed through field 'classificationServiceImpl'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'classificationServiceImpl': Unsatisfied dependency expressed through field 'baseMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'classificationMapper' defined in file [D:\JavaProject\dataservice\target\classes\com\tjhnode\dataservice\mapper\ClassificationMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [com/baomidou/mybatisplus/autoconfigure/MybatisPlusAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.lang.IllegalStateException: SFunction 'configuration' and 'configLocation' can not specified with together 
2020-01-08 22:36:41.003 [main] [DynamicRoutingDataSource.java:182] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - closing dynamicDatasource  ing.... 
2020-01-08 22:36:41.011 [main] [DruidDataSource.java:1825] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closed 
2020-01-08 22:36:41.014 [main] [DruidDataSource.java:1825] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4} closed 
2020-01-08 22:36:41.016 [main] [DruidDataSource.java:1825] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed 
2020-01-08 22:36:41.018 [main] [DruidDataSource.java:1825] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3} closed 
2020-01-08 22:36:41.021 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat] 
2020-01-08 22:36:41.033 [main] [ConditionEvaluationReportLoggingListener.java:142] INFO  org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled. 
2020-01-08 22:36:41.044 [main] [SpringApplication.java:858] ERROR org.springframework.boot.SpringApplication - Application run failed 
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'classficationController': Unsatisfied dependency expressed through field 'classificationServiceImpl'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'classificationServiceImpl': Unsatisfied dependency expressed through field 'baseMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'classificationMapper' defined in file [D:\JavaProject\dataservice\target\classes\com\tjhnode\dataservice\mapper\ClassificationMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [com/baomidou/mybatisplus/autoconfigure/MybatisPlusAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.lang.IllegalStateException: SFunction 'configuration' and 'configLocation' can not specified with together
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877) ~[spring-context-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549) ~[spring-context-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142) ~[spring-boot-2.1.3.RELEASE.jar:2.1.3.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775) [spring-boot-2.1.3.RELEASE.jar:2.1.3.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397) [spring-boot-2.1.3.RELEASE.jar:2.1.3.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316) [spring-boot-2.1.3.RELEASE.jar:2.1.3.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260) [spring-boot-2.1.3.RELEASE.jar:2.1.3.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248) [spring-boot-2.1.3.RELEASE.jar:2.1.3.RELEASE]
	at com.tjhnode.DataserviceApplication.main(DataserviceApplication.java:12) [classes/:?]
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'classificationServiceImpl': Unsatisfied dependency expressed through field 'baseMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'classificationMapper' defined in file [D:\JavaProject\dataservice\target\classes\com\tjhnode\dataservice\mapper\ClassificationMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [com/baomidou/mybatisplus/autoconfigure/MybatisPlusAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.lang.IllegalStateException: SFunction 'configuration' and 'configLocation' can not specified with together
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	... 19 more
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'classificationMapper' defined in file [D:\JavaProject\dataservice\target\classes\com\tjhnode\dataservice\mapper\ClassificationMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [com/baomidou/mybatisplus/autoconfigure/MybatisPlusAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.lang.IllegalStateException: SFunction 'configuration' and 'configLocation' can not specified with together
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1499) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1379) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	... 19 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [com/baomidou/mybatisplus/autoconfigure/MybatisPlusAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.lang.IllegalStateException: SFunction 'configuration' and 'configLocation' can not specified with together
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:627) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:607) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1484) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1379) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	... 19 more
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.lang.IllegalStateException: SFunction 'configuration' and 'configLocation' can not specified with together
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:622) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:607) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1484) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1379) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	... 19 more
Caused by: java.lang.IllegalStateException: SFunction 'configuration' and 'configLocation' can not specified with together
	at org.springframework.util.Assert.state(Assert.java:73) ~[spring-core-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at com.baomidou.mybatisplus.extension.spring.MybatisSqlSessionFactoryBean.afterPropertiesSet(MybatisSqlSessionFactoryBean.java:395) ~[mybatis-plus-extension-3.0.6.jar:3.0.6]
	at com.baomidou.mybatisplus.extension.spring.MybatisSqlSessionFactoryBean.getObject(MybatisSqlSessionFactoryBean.java:690) ~[mybatis-plus-extension-3.0.6.jar:3.0.6]
	at com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration.sqlSessionFactory(MybatisPlusAutoConfiguration.java:165) ~[mybatis-plus-boot-starter-3.0.6.jar:3.0.6]
	at com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$616eaf3.CGLIB$sqlSessionFactory$0(<generated>) ~[mybatis-plus-boot-starter-3.0.6.jar:3.0.6]
	at com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$616eaf3$$FastClassBySpringCGLIB$$50abc9c0.invoke(<generated>) ~[mybatis-plus-boot-starter-3.0.6.jar:3.0.6]
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244) ~[spring-core-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:363) ~[spring-context-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$616eaf3.sqlSessionFactory(<generated>) ~[mybatis-plus-boot-starter-3.0.6.jar:3.0.6]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_131]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_131]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_131]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_131]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:622) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:607) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1484) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1379) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	... 19 more
2020-01-08 22:36:49.836 [main] [StartupInfoLogger.java:50] INFO  com.tjhnode.DataserviceApplication - Starting DataserviceApplication on tjh with PID 12080 (D:\JavaProject\dataservice\target\classes started by My in D:\JavaProject\dataservice) 
2020-01-08 22:36:49.846 [main] [SpringApplication.java:675] INFO  com.tjhnode.DataserviceApplication - No active profile set, falling back to default profiles: default 
2020-01-08 22:36:51.002 [main] [RepositoryConfigurationDelegate.java:244] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode! 
2020-01-08 22:36:51.006 [main] [RepositoryConfigurationDelegate.java:126] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode. 
2020-01-08 22:36:51.044 [main] [RepositoryConfigurationDelegate.java:182] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 24ms. Found 0 repository interfaces. 
2020-01-08 22:36:51.381 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$6f553fa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 22:36:51.441 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 22:36:51.444 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$7083c4cb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 22:36:51.449 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 22:36:51.455 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 22:36:51.850 [main] [TomcatWebServer.java:90] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 81 (http) 
2020-01-08 22:36:51.868 [main] [DirectJDKLog.java:173] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-81"] 
2020-01-08 22:36:51.875 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat] 
2020-01-08 22:36:51.876 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16] 
2020-01-08 22:36:51.883 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded APR based Apache Tomcat Native library [1.2.21] using APR version [1.6.5]. 
2020-01-08 22:36:51.883 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true]. 
2020-01-08 22:36:51.884 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true] 
2020-01-08 22:36:52.950 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 1.0.2q  20 Nov 2018] 
2020-01-08 22:36:53.090 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext 
2020-01-08 22:36:53.090 [main] [ServletWebServerApplicationContext.java:296] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3131 ms 
2020-01-08 22:36:53.299 [main] [DynamicDataSourceCreator.java:113] INFO  com.baomidou.dynamic.datasource.DynamicDataSourceCreator - 动态数据源-检测到druid存在,如配置中未指定type,druid会默认配置 
2020-01-08 22:36:55.175 [main] [DruidDataSource.java:930] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1,master} inited 
2020-01-08 22:36:55.270 [main] [DruidDataSource.java:930] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2,appconfig} inited 
2020-01-08 22:36:55.323 [main] [DruidDataSource.java:930] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3,applog} inited 
2020-01-08 22:36:55.381 [main] [DruidDataSource.java:930] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4,app} inited 
2020-01-08 22:36:55.381 [main] [DynamicRoutingDataSource.java:203] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 初始共加载 4 个数据源 
2020-01-08 22:36:55.381 [main] [DynamicRoutingDataSource.java:142] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 动态数据源-加载 appconfig 成功 
2020-01-08 22:36:55.382 [main] [DynamicRoutingDataSource.java:142] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 动态数据源-加载 app 成功 
2020-01-08 22:36:55.382 [main] [DynamicRoutingDataSource.java:142] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 动态数据源-加载 master 成功 
2020-01-08 22:36:55.382 [main] [DynamicRoutingDataSource.java:142] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 动态数据源-加载 applog 成功 
2020-01-08 22:36:55.383 [main] [DynamicRoutingDataSource.java:212] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 appconfig 
2020-01-08 22:36:55.408 [main] [AbstractApplicationContext.java:557] WARN  org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'classficationController': Unsatisfied dependency expressed through field 'classificationServiceImpl'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'classificationServiceImpl': Unsatisfied dependency expressed through field 'baseMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'classificationMapper' defined in file [D:\JavaProject\dataservice\target\classes\com\tjhnode\dataservice\mapper\ClassificationMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [com/baomidou/mybatisplus/autoconfigure/MybatisPlusAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.lang.IllegalStateException: SFunction 'configuration' and 'configLocation' can not specified with together 
2020-01-08 22:36:55.409 [main] [DynamicRoutingDataSource.java:182] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - closing dynamicDatasource  ing.... 
2020-01-08 22:36:55.416 [main] [DruidDataSource.java:1825] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closed 
2020-01-08 22:36:55.418 [main] [DruidDataSource.java:1825] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4} closed 
2020-01-08 22:36:55.420 [main] [DruidDataSource.java:1825] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed 
2020-01-08 22:36:55.422 [main] [DruidDataSource.java:1825] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3} closed 
2020-01-08 22:36:55.425 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat] 
2020-01-08 22:36:55.446 [main] [ConditionEvaluationReportLoggingListener.java:142] INFO  org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled. 
2020-01-08 22:36:55.455 [main] [SpringApplication.java:858] ERROR org.springframework.boot.SpringApplication - Application run failed 
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'classficationController': Unsatisfied dependency expressed through field 'classificationServiceImpl'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'classificationServiceImpl': Unsatisfied dependency expressed through field 'baseMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'classificationMapper' defined in file [D:\JavaProject\dataservice\target\classes\com\tjhnode\dataservice\mapper\ClassificationMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [com/baomidou/mybatisplus/autoconfigure/MybatisPlusAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.lang.IllegalStateException: SFunction 'configuration' and 'configLocation' can not specified with together
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877) ~[spring-context-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549) ~[spring-context-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142) ~[spring-boot-2.1.3.RELEASE.jar:2.1.3.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775) [spring-boot-2.1.3.RELEASE.jar:2.1.3.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397) [spring-boot-2.1.3.RELEASE.jar:2.1.3.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316) [spring-boot-2.1.3.RELEASE.jar:2.1.3.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260) [spring-boot-2.1.3.RELEASE.jar:2.1.3.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248) [spring-boot-2.1.3.RELEASE.jar:2.1.3.RELEASE]
	at com.tjhnode.DataserviceApplication.main(DataserviceApplication.java:12) [classes/:?]
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'classificationServiceImpl': Unsatisfied dependency expressed through field 'baseMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'classificationMapper' defined in file [D:\JavaProject\dataservice\target\classes\com\tjhnode\dataservice\mapper\ClassificationMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [com/baomidou/mybatisplus/autoconfigure/MybatisPlusAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.lang.IllegalStateException: SFunction 'configuration' and 'configLocation' can not specified with together
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	... 19 more
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'classificationMapper' defined in file [D:\JavaProject\dataservice\target\classes\com\tjhnode\dataservice\mapper\ClassificationMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [com/baomidou/mybatisplus/autoconfigure/MybatisPlusAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.lang.IllegalStateException: SFunction 'configuration' and 'configLocation' can not specified with together
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1499) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1379) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	... 19 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [com/baomidou/mybatisplus/autoconfigure/MybatisPlusAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.lang.IllegalStateException: SFunction 'configuration' and 'configLocation' can not specified with together
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:627) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:607) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1484) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1379) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	... 19 more
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.lang.IllegalStateException: SFunction 'configuration' and 'configLocation' can not specified with together
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:622) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:607) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1484) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1379) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	... 19 more
Caused by: java.lang.IllegalStateException: SFunction 'configuration' and 'configLocation' can not specified with together
	at org.springframework.util.Assert.state(Assert.java:73) ~[spring-core-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at com.baomidou.mybatisplus.extension.spring.MybatisSqlSessionFactoryBean.afterPropertiesSet(MybatisSqlSessionFactoryBean.java:395) ~[mybatis-plus-extension-3.0.6.jar:3.0.6]
	at com.baomidou.mybatisplus.extension.spring.MybatisSqlSessionFactoryBean.getObject(MybatisSqlSessionFactoryBean.java:690) ~[mybatis-plus-extension-3.0.6.jar:3.0.6]
	at com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration.sqlSessionFactory(MybatisPlusAutoConfiguration.java:165) ~[mybatis-plus-boot-starter-3.0.6.jar:3.0.6]
	at com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$44bdc094.CGLIB$sqlSessionFactory$0(<generated>) ~[mybatis-plus-boot-starter-3.0.6.jar:3.0.6]
	at com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$44bdc094$$FastClassBySpringCGLIB$$dec5090e.invoke(<generated>) ~[mybatis-plus-boot-starter-3.0.6.jar:3.0.6]
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244) ~[spring-core-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:363) ~[spring-context-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$44bdc094.sqlSessionFactory(<generated>) ~[mybatis-plus-boot-starter-3.0.6.jar:3.0.6]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_131]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_131]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_131]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_131]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:622) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:607) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1484) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1379) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	... 19 more
2020-01-08 22:37:08.520 [main] [StartupInfoLogger.java:50] INFO  com.tjhnode.DataserviceApplication - Starting DataserviceApplication on tjh with PID 11072 (D:\JavaProject\dataservice\target\classes started by My in D:\JavaProject\dataservice) 
2020-01-08 22:37:08.582 [main] [SpringApplication.java:675] INFO  com.tjhnode.DataserviceApplication - No active profile set, falling back to default profiles: default 
2020-01-08 22:37:09.919 [main] [RepositoryConfigurationDelegate.java:244] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode! 
2020-01-08 22:37:09.923 [main] [RepositoryConfigurationDelegate.java:126] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode. 
2020-01-08 22:37:09.970 [main] [RepositoryConfigurationDelegate.java:182] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 31ms. Found 0 repository interfaces. 
2020-01-08 22:37:10.317 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$5cebfe2c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 22:37:10.385 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 22:37:10.389 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$c67a6efd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 22:37:10.398 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 22:37:10.404 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 22:37:10.874 [main] [TomcatWebServer.java:90] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 81 (http) 
2020-01-08 22:37:10.900 [main] [DirectJDKLog.java:173] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-81"] 
2020-01-08 22:37:10.912 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat] 
2020-01-08 22:37:10.914 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16] 
2020-01-08 22:37:10.923 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded APR based Apache Tomcat Native library [1.2.21] using APR version [1.6.5]. 
2020-01-08 22:37:10.923 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true]. 
2020-01-08 22:37:10.924 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true] 
2020-01-08 22:37:12.052 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 1.0.2q  20 Nov 2018] 
2020-01-08 22:37:12.279 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext 
2020-01-08 22:37:12.279 [main] [ServletWebServerApplicationContext.java:296] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3623 ms 
2020-01-08 22:37:12.538 [main] [DynamicDataSourceCreator.java:113] INFO  com.baomidou.dynamic.datasource.DynamicDataSourceCreator - 动态数据源-检测到druid存在,如配置中未指定type,druid会默认配置 
2020-01-08 22:37:12.796 [main] [StartupInfoLogger.java:50] INFO  com.tjhnode.DataserviceApplication - Starting DataserviceApplication on tjh with PID 6092 (D:\JavaProject\dataservice\target\classes started by My in D:\JavaProject\dataservice) 
2020-01-08 22:37:12.808 [main] [SpringApplication.java:675] INFO  com.tjhnode.DataserviceApplication - No active profile set, falling back to default profiles: default 
2020-01-08 22:37:14.286 [main] [RepositoryConfigurationDelegate.java:244] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode! 
2020-01-08 22:37:14.294 [main] [RepositoryConfigurationDelegate.java:126] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode. 
2020-01-08 22:37:14.338 [main] [RepositoryConfigurationDelegate.java:182] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 28ms. Found 0 repository interfaces. 
2020-01-08 22:37:14.799 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$213fd5be] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 22:37:14.883 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 22:37:14.888 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$8ace468f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 22:37:14.897 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 22:37:14.906 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 22:37:15.060 [main] [DruidDataSource.java:930] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1,master} inited 
2020-01-08 22:37:15.142 [main] [DruidDataSource.java:930] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2,appconfig} inited 
2020-01-08 22:37:15.237 [main] [DruidDataSource.java:930] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3,applog} inited 
2020-01-08 22:37:15.326 [main] [DruidDataSource.java:930] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4,app} inited 
2020-01-08 22:37:15.326 [main] [DynamicRoutingDataSource.java:203] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 初始共加载 4 个数据源 
2020-01-08 22:37:15.326 [main] [DynamicRoutingDataSource.java:142] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 动态数据源-加载 appconfig 成功 
2020-01-08 22:37:15.327 [main] [DynamicRoutingDataSource.java:142] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 动态数据源-加载 app 成功 
2020-01-08 22:37:15.327 [main] [DynamicRoutingDataSource.java:142] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 动态数据源-加载 master 成功 
2020-01-08 22:37:15.327 [main] [DynamicRoutingDataSource.java:142] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 动态数据源-加载 applog 成功 
2020-01-08 22:37:15.327 [main] [DynamicRoutingDataSource.java:212] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 appconfig 
2020-01-08 22:37:15.411 [main] [TomcatWebServer.java:90] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 81 (http) 
2020-01-08 22:37:15.426 [main] [DirectJDKLog.java:173] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-81"] 
2020-01-08 22:37:15.435 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat] 
2020-01-08 22:37:15.435 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16] 
2020-01-08 22:37:15.443 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded APR based Apache Tomcat Native library [1.2.21] using APR version [1.6.5]. 
2020-01-08 22:37:15.443 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true]. 
2020-01-08 22:37:15.444 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true] 
2020-01-08 22:37:15.621 [main] [TableInfoHelper.java:250] WARN  com.baomidou.mybatisplus.core.toolkit.TableInfoHelper - Warn: Could not find @TableId in Class: com.tjhnode.dataservice.model.entities.ClassificationModel. 
2020-01-08 22:37:15.673 [main] [TableInfoHelper.java:250] WARN  com.baomidou.mybatisplus.core.toolkit.TableInfoHelper - Warn: Could not find @TableId in Class: com.tjhnode.dataservice.model.entities.ConfigItemModel. 
2020-01-08 22:37:15.724 [main] [TableInfoHelper.java:250] WARN  com.baomidou.mybatisplus.core.toolkit.TableInfoHelper - Warn: Could not find @TableId in Class: com.tjhnode.dataservice.model.entities.Enumparameters. 
2020-01-08 22:37:15.752 [main] [TableInfoHelper.java:250] WARN  com.baomidou.mybatisplus.core.toolkit.TableInfoHelper - Warn: Could not find @TableId in Class: com.tjhnode.dataservice.model.entities.ParametersConfig. 
2020-01-08 22:37:15.778 [main] [TableInfoHelper.java:250] WARN  com.baomidou.mybatisplus.core.toolkit.TableInfoHelper - Warn: Could not find @TableId in Class: com.tjhnode.dataservice.model.entities.SqlConfigModel. 
2020-01-08 22:37:16.261 [main] [PropertySourcedRequestMappingHandlerMapping.java:69] INFO  springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)] 
2020-01-08 22:37:16.439 [main] [ExecutorConfigurationSupport.java:171] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor' 
2020-01-08 22:37:16.534 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 1.0.2q  20 Nov 2018] 
2020-01-08 22:37:16.691 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext 
2020-01-08 22:37:16.692 [main] [ServletWebServerApplicationContext.java:296] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3769 ms 
2020-01-08 22:37:16.855 [main] [DynamicDataSourceCreator.java:113] INFO  com.baomidou.dynamic.datasource.DynamicDataSourceCreator - 动态数据源-检测到druid存在,如配置中未指定type,druid会默认配置 
2020-01-08 22:37:17.015 [main] [DocumentationPluginsBootstrapper.java:147] INFO  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Context refreshed 
2020-01-08 22:37:17.028 [main] [DocumentationPluginsBootstrapper.java:150] INFO  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s) 
2020-01-08 22:37:17.059 [main] [ApiListingReferenceScanner.java:41] INFO  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references 
2020-01-08 22:37:17.237 [main] [CachingOperationNameGenerator.java:40] INFO  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteConfigItemUsingPOST_1 
2020-01-08 22:37:17.247 [main] [CachingOperationNameGenerator.java:40] INFO  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: insertConfigItemUsingPOST_1 
2020-01-08 22:37:17.249 [main] [CachingOperationNameGenerator.java:40] INFO  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateConfigItemUsingPOST_1 
2020-01-08 22:37:17.265 [main] [DirectJDKLog.java:173] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-81"] 
2020-01-08 22:37:17.287 [main] [TomcatWebServer.java:204] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 81 (http) with context path '' 
2020-01-08 22:37:17.290 [main] [StartupInfoLogger.java:59] INFO  com.tjhnode.DataserviceApplication - Started DataserviceApplication in 9.228 seconds (JVM running for 12.115) 
2020-01-08 22:37:18.891 [main] [DruidDataSource.java:930] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1,master} inited 
2020-01-08 22:37:18.954 [main] [DruidDataSource.java:930] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2,appconfig} inited 
2020-01-08 22:37:19.011 [main] [DruidDataSource.java:930] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3,applog} inited 
2020-01-08 22:37:19.076 [main] [DruidDataSource.java:930] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4,app} inited 
2020-01-08 22:37:19.076 [main] [DynamicRoutingDataSource.java:203] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 初始共加载 4 个数据源 
2020-01-08 22:37:19.077 [main] [DynamicRoutingDataSource.java:142] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 动态数据源-加载 appconfig 成功 
2020-01-08 22:37:19.077 [main] [DynamicRoutingDataSource.java:142] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 动态数据源-加载 app 成功 
2020-01-08 22:37:19.077 [main] [DynamicRoutingDataSource.java:142] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 动态数据源-加载 master 成功 
2020-01-08 22:37:19.077 [main] [DynamicRoutingDataSource.java:142] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 动态数据源-加载 applog 成功 
2020-01-08 22:37:19.077 [main] [DynamicRoutingDataSource.java:212] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 appconfig 
2020-01-08 22:37:19.523 [main] [TableInfoHelper.java:250] WARN  com.baomidou.mybatisplus.core.toolkit.TableInfoHelper - Warn: Could not find @TableId in Class: com.tjhnode.dataservice.model.entities.ClassificationModel. 
2020-01-08 22:37:19.598 [main] [TableInfoHelper.java:250] WARN  com.baomidou.mybatisplus.core.toolkit.TableInfoHelper - Warn: Could not find @TableId in Class: com.tjhnode.dataservice.model.entities.ConfigItemModel. 
2020-01-08 22:37:19.648 [main] [TableInfoHelper.java:250] WARN  com.baomidou.mybatisplus.core.toolkit.TableInfoHelper - Warn: Could not find @TableId in Class: com.tjhnode.dataservice.model.entities.Enumparameters. 
2020-01-08 22:37:19.693 [main] [TableInfoHelper.java:250] WARN  com.baomidou.mybatisplus.core.toolkit.TableInfoHelper - Warn: Could not find @TableId in Class: com.tjhnode.dataservice.model.entities.ParametersConfig. 
2020-01-08 22:37:19.736 [main] [TableInfoHelper.java:250] WARN  com.baomidou.mybatisplus.core.toolkit.TableInfoHelper - Warn: Could not find @TableId in Class: com.tjhnode.dataservice.model.entities.SqlConfigModel. 
2020-01-08 22:37:20.389 [main] [PropertySourcedRequestMappingHandlerMapping.java:69] INFO  springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)] 
2020-01-08 22:37:20.592 [main] [ExecutorConfigurationSupport.java:171] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor' 
2020-01-08 22:37:21.311 [main] [DocumentationPluginsBootstrapper.java:147] INFO  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Context refreshed 
2020-01-08 22:37:21.328 [main] [DocumentationPluginsBootstrapper.java:150] INFO  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s) 
2020-01-08 22:37:21.365 [main] [ApiListingReferenceScanner.java:41] INFO  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references 
2020-01-08 22:37:21.662 [main] [CachingOperationNameGenerator.java:40] INFO  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteConfigItemUsingPOST_1 
2020-01-08 22:37:21.673 [main] [CachingOperationNameGenerator.java:40] INFO  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: insertConfigItemUsingPOST_1 
2020-01-08 22:37:21.676 [main] [CachingOperationNameGenerator.java:40] INFO  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateConfigItemUsingPOST_1 
2020-01-08 22:37:21.693 [main] [DirectJDKLog.java:173] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-81"] 
2020-01-08 22:37:21.704 [main] [DirectJDKLog.java:175] ERROR org.apache.catalina.util.LifecycleBase - Failed to start component [Connector[HTTP/1.1-81]] 
org.apache.catalina.LifecycleException: Protocol handler start failed
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1008) ~[tomcat-embed-core-9.0.16.jar:9.0.16]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183) [tomcat-embed-core-9.0.16.jar:9.0.16]
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:226) [tomcat-embed-core-9.0.16.jar:9.0.16]
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.addPreviouslyRemovedConnectors(TomcatWebServer.java:259) [spring-boot-2.1.3.RELEASE.jar:2.1.3.RELEASE]
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:197) [spring-boot-2.1.3.RELEASE.jar:2.1.3.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.startWebServer(ServletWebServerApplicationContext.java:311) [spring-boot-2.1.3.RELEASE.jar:2.1.3.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:164) [spring-boot-2.1.3.RELEASE.jar:2.1.3.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:552) [spring-context-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142) [spring-boot-2.1.3.RELEASE.jar:2.1.3.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775) [spring-boot-2.1.3.RELEASE.jar:2.1.3.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397) [spring-boot-2.1.3.RELEASE.jar:2.1.3.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316) [spring-boot-2.1.3.RELEASE.jar:2.1.3.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260) [spring-boot-2.1.3.RELEASE.jar:2.1.3.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248) [spring-boot-2.1.3.RELEASE.jar:2.1.3.RELEASE]
	at com.tjhnode.DataserviceApplication.main(DataserviceApplication.java:12) [classes/:?]
Caused by: java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method) ~[?:1.8.0_131]
	at sun.nio.ch.Net.bind(Net.java:433) ~[?:1.8.0_131]
	at sun.nio.ch.Net.bind(Net.java:425) ~[?:1.8.0_131]
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223) ~[?:1.8.0_131]
	at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:74) ~[?:1.8.0_131]
	at org.apache.tomcat.util.net.NioEndpoint.initServerSocket(NioEndpoint.java:236) ~[tomcat-embed-core-9.0.16.jar:9.0.16]
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:210) ~[tomcat-embed-core-9.0.16.jar:9.0.16]
	at org.apache.tomcat.util.net.AbstractEndpoint.bindWithCleanup(AbstractEndpoint.java:1085) ~[tomcat-embed-core-9.0.16.jar:9.0.16]
	at org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:1171) ~[tomcat-embed-core-9.0.16.jar:9.0.16]
	at org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:568) ~[tomcat-embed-core-9.0.16.jar:9.0.16]
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1005) ~[tomcat-embed-core-9.0.16.jar:9.0.16]
	... 14 more
2020-01-08 22:37:21.720 [main] [DirectJDKLog.java:173] INFO  org.apache.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-81"] 
2020-01-08 22:37:21.721 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat] 
2020-01-08 22:37:21.726 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.util.LifecycleBase - The stop() method was called on component [StandardServer[-1]] after stop() had already been called. The second call will be ignored. 
2020-01-08 22:37:21.726 [main] [DirectJDKLog.java:173] INFO  org.apache.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-81"] 
2020-01-08 22:37:21.727 [main] [DirectJDKLog.java:173] INFO  org.apache.coyote.http11.Http11NioProtocol - Destroying ProtocolHandler ["http-nio-81"] 
2020-01-08 22:37:21.732 [main] [ConditionEvaluationReportLoggingListener.java:142] INFO  org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled. 
2020-01-08 22:37:21.738 [main] [LoggingFailureAnalysisReporter.java:42] ERROR org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

The Tomcat connector configured to listen on port 81 failed to start. The port may already be in use or the connector may be misconfigured.

Action:

Verify the connector's configuration, identify and stop any process that's listening on port 81, or configure this application to listen on another port.
 
2020-01-08 22:37:21.760 [main] [ExecutorConfigurationSupport.java:208] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor' 
2020-01-08 22:37:21.762 [main] [DynamicRoutingDataSource.java:182] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - closing dynamicDatasource  ing.... 
2020-01-08 22:37:21.769 [main] [DruidDataSource.java:1825] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closed 
2020-01-08 22:37:21.772 [main] [DruidDataSource.java:1825] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4} closed 
2020-01-08 22:37:21.774 [main] [DruidDataSource.java:1825] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed 
2020-01-08 22:37:21.777 [main] [DruidDataSource.java:1825] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3} closed 
2020-01-08 22:38:14.154 [http-nio-81-exec-1] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet' 
2020-01-08 22:38:14.155 [http-nio-81-exec-1] [FrameworkServlet.java:524] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet' 
2020-01-08 22:38:14.162 [http-nio-81-exec-1] [FrameworkServlet.java:546] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 7 ms 
2020-01-08 22:39:05.650 [main] [StartupInfoLogger.java:50] INFO  com.tjhnode.DataserviceApplication - Starting DataserviceApplication on tjh with PID 11520 (D:\JavaProject\dataservice\target\classes started by My in D:\JavaProject\dataservice) 
2020-01-08 22:39:05.660 [main] [SpringApplication.java:675] INFO  com.tjhnode.DataserviceApplication - No active profile set, falling back to default profiles: default 
2020-01-08 22:39:06.794 [main] [RepositoryConfigurationDelegate.java:244] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode! 
2020-01-08 22:39:06.799 [main] [RepositoryConfigurationDelegate.java:126] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode. 
2020-01-08 22:39:06.840 [main] [RepositoryConfigurationDelegate.java:182] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 24ms. Found 0 repository interfaces. 
2020-01-08 22:39:07.230 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$8e2677c3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 22:39:07.286 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 22:39:07.289 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$f7b4e894] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 22:39:07.296 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 22:39:07.302 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 22:39:07.709 [main] [TomcatWebServer.java:90] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 81 (http) 
2020-01-08 22:39:07.723 [main] [DirectJDKLog.java:173] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-81"] 
2020-01-08 22:39:07.732 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat] 
2020-01-08 22:39:07.732 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16] 
2020-01-08 22:39:07.740 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded APR based Apache Tomcat Native library [1.2.21] using APR version [1.6.5]. 
2020-01-08 22:39:07.741 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true]. 
2020-01-08 22:39:07.741 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true] 
2020-01-08 22:39:08.836 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 1.0.2q  20 Nov 2018] 
2020-01-08 22:39:08.976 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext 
2020-01-08 22:39:08.977 [main] [ServletWebServerApplicationContext.java:296] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3214 ms 
2020-01-08 22:39:09.187 [main] [DynamicDataSourceCreator.java:113] INFO  com.baomidou.dynamic.datasource.DynamicDataSourceCreator - 动态数据源-检测到druid存在,如配置中未指定type,druid会默认配置 
2020-01-08 22:39:11.017 [main] [DruidDataSource.java:930] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1,master} inited 
2020-01-08 22:39:11.084 [main] [DruidDataSource.java:930] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2,appconfig} inited 
2020-01-08 22:39:11.145 [main] [DruidDataSource.java:930] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3,applog} inited 
2020-01-08 22:39:11.196 [main] [DruidDataSource.java:930] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4,app} inited 
2020-01-08 22:39:11.197 [main] [DynamicRoutingDataSource.java:203] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 初始共加载 4 个数据源 
2020-01-08 22:39:11.197 [main] [DynamicRoutingDataSource.java:142] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 动态数据源-加载 appconfig 成功 
2020-01-08 22:39:11.197 [main] [DynamicRoutingDataSource.java:142] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 动态数据源-加载 app 成功 
2020-01-08 22:39:11.197 [main] [DynamicRoutingDataSource.java:142] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 动态数据源-加载 master 成功 
2020-01-08 22:39:11.198 [main] [DynamicRoutingDataSource.java:142] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 动态数据源-加载 applog 成功 
2020-01-08 22:39:11.198 [main] [DynamicRoutingDataSource.java:212] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 appconfig 
2020-01-08 22:39:11.223 [main] [AbstractApplicationContext.java:557] WARN  org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'classficationController': Unsatisfied dependency expressed through field 'classificationServiceImpl'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'classificationServiceImpl': Unsatisfied dependency expressed through field 'baseMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'classificationMapper' defined in file [D:\JavaProject\dataservice\target\classes\com\tjhnode\dataservice\mapper\ClassificationMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [com/baomidou/mybatisplus/autoconfigure/MybatisPlusAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.lang.IllegalStateException: SFunction 'configuration' and 'configLocation' can not specified with together 
2020-01-08 22:39:11.224 [main] [DynamicRoutingDataSource.java:182] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - closing dynamicDatasource  ing.... 
2020-01-08 22:39:11.231 [main] [DruidDataSource.java:1825] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closed 
2020-01-08 22:39:11.235 [main] [DruidDataSource.java:1825] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4} closed 
2020-01-08 22:39:11.238 [main] [DruidDataSource.java:1825] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed 
2020-01-08 22:39:11.242 [main] [DruidDataSource.java:1825] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3} closed 
2020-01-08 22:39:11.245 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat] 
2020-01-08 22:39:11.258 [main] [ConditionEvaluationReportLoggingListener.java:142] INFO  org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled. 
2020-01-08 22:39:11.268 [main] [SpringApplication.java:858] ERROR org.springframework.boot.SpringApplication - Application run failed 
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'classficationController': Unsatisfied dependency expressed through field 'classificationServiceImpl'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'classificationServiceImpl': Unsatisfied dependency expressed through field 'baseMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'classificationMapper' defined in file [D:\JavaProject\dataservice\target\classes\com\tjhnode\dataservice\mapper\ClassificationMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [com/baomidou/mybatisplus/autoconfigure/MybatisPlusAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.lang.IllegalStateException: SFunction 'configuration' and 'configLocation' can not specified with together
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877) ~[spring-context-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549) ~[spring-context-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142) ~[spring-boot-2.1.3.RELEASE.jar:2.1.3.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775) [spring-boot-2.1.3.RELEASE.jar:2.1.3.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397) [spring-boot-2.1.3.RELEASE.jar:2.1.3.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316) [spring-boot-2.1.3.RELEASE.jar:2.1.3.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260) [spring-boot-2.1.3.RELEASE.jar:2.1.3.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248) [spring-boot-2.1.3.RELEASE.jar:2.1.3.RELEASE]
	at com.tjhnode.DataserviceApplication.main(DataserviceApplication.java:12) [classes/:?]
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'classificationServiceImpl': Unsatisfied dependency expressed through field 'baseMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'classificationMapper' defined in file [D:\JavaProject\dataservice\target\classes\com\tjhnode\dataservice\mapper\ClassificationMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [com/baomidou/mybatisplus/autoconfigure/MybatisPlusAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.lang.IllegalStateException: SFunction 'configuration' and 'configLocation' can not specified with together
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	... 19 more
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'classificationMapper' defined in file [D:\JavaProject\dataservice\target\classes\com\tjhnode\dataservice\mapper\ClassificationMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [com/baomidou/mybatisplus/autoconfigure/MybatisPlusAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.lang.IllegalStateException: SFunction 'configuration' and 'configLocation' can not specified with together
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1499) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1379) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	... 19 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [com/baomidou/mybatisplus/autoconfigure/MybatisPlusAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.lang.IllegalStateException: SFunction 'configuration' and 'configLocation' can not specified with together
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:627) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:607) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1484) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1379) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	... 19 more
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.lang.IllegalStateException: SFunction 'configuration' and 'configLocation' can not specified with together
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:622) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:607) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1484) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1379) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	... 19 more
Caused by: java.lang.IllegalStateException: SFunction 'configuration' and 'configLocation' can not specified with together
	at org.springframework.util.Assert.state(Assert.java:73) ~[spring-core-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at com.baomidou.mybatisplus.extension.spring.MybatisSqlSessionFactoryBean.afterPropertiesSet(MybatisSqlSessionFactoryBean.java:395) ~[mybatis-plus-extension-3.0.6.jar:3.0.6]
	at com.baomidou.mybatisplus.extension.spring.MybatisSqlSessionFactoryBean.getObject(MybatisSqlSessionFactoryBean.java:690) ~[mybatis-plus-extension-3.0.6.jar:3.0.6]
	at com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration.sqlSessionFactory(MybatisPlusAutoConfiguration.java:165) ~[mybatis-plus-boot-starter-3.0.6.jar:3.0.6]
	at com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$cbeee45d.CGLIB$sqlSessionFactory$0(<generated>) ~[mybatis-plus-boot-starter-3.0.6.jar:3.0.6]
	at com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$cbeee45d$$FastClassBySpringCGLIB$$77a88481.invoke(<generated>) ~[mybatis-plus-boot-starter-3.0.6.jar:3.0.6]
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244) ~[spring-core-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:363) ~[spring-context-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$cbeee45d.sqlSessionFactory(<generated>) ~[mybatis-plus-boot-starter-3.0.6.jar:3.0.6]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_131]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_131]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_131]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_131]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:622) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:607) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1484) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1379) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	... 19 more
2020-01-08 22:40:27.680 [main] [StartupInfoLogger.java:50] INFO  com.tjhnode.DataserviceApplication - Starting DataserviceApplication on tjh with PID 11844 (D:\JavaProject\dataservice\target\classes started by My in D:\JavaProject\dataservice) 
2020-01-08 22:40:27.738 [main] [SpringApplication.java:675] INFO  com.tjhnode.DataserviceApplication - No active profile set, falling back to default profiles: default 
2020-01-08 22:40:28.899 [main] [RepositoryConfigurationDelegate.java:244] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode! 
2020-01-08 22:40:28.905 [main] [RepositoryConfigurationDelegate.java:126] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode. 
2020-01-08 22:40:28.953 [main] [RepositoryConfigurationDelegate.java:182] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 25ms. Found 0 repository interfaces. 
2020-01-08 22:40:29.449 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ff88c20d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 22:40:29.514 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 22:40:29.517 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$691732de] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 22:40:29.527 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 22:40:29.534 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 22:40:30.017 [main] [TomcatWebServer.java:90] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 81 (http) 
2020-01-08 22:40:30.032 [main] [DirectJDKLog.java:173] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-81"] 
2020-01-08 22:40:30.041 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat] 
2020-01-08 22:40:30.042 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16] 
2020-01-08 22:40:30.049 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded APR based Apache Tomcat Native library [1.2.21] using APR version [1.6.5]. 
2020-01-08 22:40:30.050 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true]. 
2020-01-08 22:40:30.050 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true] 
2020-01-08 22:40:31.105 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 1.0.2q  20 Nov 2018] 
2020-01-08 22:40:31.264 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext 
2020-01-08 22:40:31.265 [main] [ServletWebServerApplicationContext.java:296] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3458 ms 
2020-01-08 22:40:31.443 [main] [DynamicDataSourceCreator.java:113] INFO  com.baomidou.dynamic.datasource.DynamicDataSourceCreator - 动态数据源-检测到druid存在,如配置中未指定type,druid会默认配置 
2020-01-08 22:40:33.491 [main] [DruidDataSource.java:930] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1,master} inited 
2020-01-08 22:40:33.580 [main] [DruidDataSource.java:930] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2,appconfig} inited 
2020-01-08 22:40:33.665 [main] [DruidDataSource.java:930] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3,applog} inited 
2020-01-08 22:40:33.740 [main] [DruidDataSource.java:930] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4,app} inited 
2020-01-08 22:40:33.740 [main] [DynamicRoutingDataSource.java:203] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 初始共加载 4 个数据源 
2020-01-08 22:40:33.741 [main] [DynamicRoutingDataSource.java:142] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 动态数据源-加载 appconfig 成功 
2020-01-08 22:40:33.741 [main] [DynamicRoutingDataSource.java:142] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 动态数据源-加载 app 成功 
2020-01-08 22:40:33.741 [main] [DynamicRoutingDataSource.java:142] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 动态数据源-加载 master 成功 
2020-01-08 22:40:33.741 [main] [DynamicRoutingDataSource.java:142] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 动态数据源-加载 applog 成功 
2020-01-08 22:40:33.741 [main] [DynamicRoutingDataSource.java:212] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 appconfig 
2020-01-08 22:40:34.083 [main] [TableInfoHelper.java:250] WARN  com.baomidou.mybatisplus.core.toolkit.TableInfoHelper - Warn: Could not find @TableId in Class: com.tjhnode.dataservice.model.entities.ClassificationModel. 
2020-01-08 22:40:34.160 [main] [TableInfoHelper.java:250] WARN  com.baomidou.mybatisplus.core.toolkit.TableInfoHelper - Warn: Could not find @TableId in Class: com.tjhnode.dataservice.model.entities.ConfigItemModel. 
2020-01-08 22:40:34.196 [main] [TableInfoHelper.java:250] WARN  com.baomidou.mybatisplus.core.toolkit.TableInfoHelper - Warn: Could not find @TableId in Class: com.tjhnode.dataservice.model.entities.Enumparameters. 
2020-01-08 22:40:34.227 [main] [TableInfoHelper.java:250] WARN  com.baomidou.mybatisplus.core.toolkit.TableInfoHelper - Warn: Could not find @TableId in Class: com.tjhnode.dataservice.model.entities.ParametersConfig. 
2020-01-08 22:40:34.258 [main] [TableInfoHelper.java:250] WARN  com.baomidou.mybatisplus.core.toolkit.TableInfoHelper - Warn: Could not find @TableId in Class: com.tjhnode.dataservice.model.entities.SqlConfigModel. 
2020-01-08 22:40:34.894 [main] [PropertySourcedRequestMappingHandlerMapping.java:69] INFO  springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)] 
2020-01-08 22:40:35.138 [main] [ExecutorConfigurationSupport.java:171] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor' 
2020-01-08 22:40:36.011 [main] [DocumentationPluginsBootstrapper.java:147] INFO  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Context refreshed 
2020-01-08 22:40:36.027 [main] [DocumentationPluginsBootstrapper.java:150] INFO  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s) 
2020-01-08 22:40:36.063 [main] [ApiListingReferenceScanner.java:41] INFO  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references 
2020-01-08 22:40:36.276 [main] [CachingOperationNameGenerator.java:40] INFO  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteConfigItemUsingPOST_1 
2020-01-08 22:40:36.285 [main] [CachingOperationNameGenerator.java:40] INFO  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: insertConfigItemUsingPOST_1 
2020-01-08 22:40:36.287 [main] [CachingOperationNameGenerator.java:40] INFO  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateConfigItemUsingPOST_1 
2020-01-08 22:40:36.310 [main] [DirectJDKLog.java:173] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-81"] 
2020-01-08 22:40:36.334 [main] [TomcatWebServer.java:204] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 81 (http) with context path '' 
2020-01-08 22:40:36.338 [main] [StartupInfoLogger.java:59] INFO  com.tjhnode.DataserviceApplication - Started DataserviceApplication in 9.368 seconds (JVM running for 12.931) 
2020-01-08 22:40:56.456 [http-nio-81-exec-1] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet' 
2020-01-08 22:40:56.456 [http-nio-81-exec-1] [FrameworkServlet.java:524] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet' 
2020-01-08 22:40:56.465 [http-nio-81-exec-1] [FrameworkServlet.java:546] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 9 ms 
2020-01-08 22:49:40.658 [Thread-19] [ExecutorConfigurationSupport.java:208] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor' 
2020-01-08 22:49:40.662 [Thread-19] [DynamicRoutingDataSource.java:182] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - closing dynamicDatasource  ing.... 
2020-01-08 22:49:40.672 [Thread-19] [DruidDataSource.java:1825] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closed 
2020-01-08 22:49:40.680 [Thread-19] [DruidDataSource.java:1825] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4} closed 
2020-01-08 22:49:40.689 [Thread-19] [DruidDataSource.java:1825] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed 
2020-01-08 22:49:40.699 [Thread-19] [DruidDataSource.java:1825] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3} closed 
2020-01-08 22:49:50.762 [main] [StartupInfoLogger.java:50] INFO  com.tjhnode.DataserviceApplication - Starting DataserviceApplication on tjh with PID 7072 (D:\JavaProject\dataservice\target\classes started by My in D:\JavaProject\dataservice) 
2020-01-08 22:49:50.814 [main] [SpringApplication.java:675] INFO  com.tjhnode.DataserviceApplication - No active profile set, falling back to default profiles: default 
2020-01-08 22:49:51.853 [main] [RepositoryConfigurationDelegate.java:244] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode! 
2020-01-08 22:49:51.857 [main] [RepositoryConfigurationDelegate.java:126] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode. 
2020-01-08 22:49:51.895 [main] [RepositoryConfigurationDelegate.java:182] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 23ms. Found 0 repository interfaces. 
2020-01-08 22:49:52.227 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c0447414] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 22:49:52.282 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 22:49:52.284 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$29d2e4e5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 22:49:52.290 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 22:49:52.297 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 22:49:52.675 [main] [TomcatWebServer.java:90] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 81 (http) 
2020-01-08 22:49:52.688 [main] [DirectJDKLog.java:173] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-81"] 
2020-01-08 22:49:52.696 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat] 
2020-01-08 22:49:52.697 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16] 
2020-01-08 22:49:52.703 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded APR based Apache Tomcat Native library [1.2.21] using APR version [1.6.5]. 
2020-01-08 22:49:52.704 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true]. 
2020-01-08 22:49:52.704 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true] 
2020-01-08 22:49:53.759 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 1.0.2q  20 Nov 2018] 
2020-01-08 22:49:53.908 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext 
2020-01-08 22:49:53.908 [main] [ServletWebServerApplicationContext.java:296] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3046 ms 
2020-01-08 22:49:54.057 [main] [DynamicDataSourceCreator.java:113] INFO  com.baomidou.dynamic.datasource.DynamicDataSourceCreator - 动态数据源-检测到druid存在,如配置中未指定type,druid会默认配置 
2020-01-08 22:49:55.883 [main] [DruidDataSource.java:930] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1,master} inited 
2020-01-08 22:49:55.954 [main] [DruidDataSource.java:930] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2,appconfig} inited 
2020-01-08 22:49:56.016 [main] [DruidDataSource.java:930] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3,applog} inited 
2020-01-08 22:49:56.084 [main] [DruidDataSource.java:930] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4,app} inited 
2020-01-08 22:49:56.084 [main] [DynamicRoutingDataSource.java:203] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 初始共加载 4 个数据源 
2020-01-08 22:49:56.085 [main] [DynamicRoutingDataSource.java:142] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 动态数据源-加载 appconfig 成功 
2020-01-08 22:49:56.085 [main] [DynamicRoutingDataSource.java:142] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 动态数据源-加载 app 成功 
2020-01-08 22:49:56.085 [main] [DynamicRoutingDataSource.java:142] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 动态数据源-加载 master 成功 
2020-01-08 22:49:56.085 [main] [DynamicRoutingDataSource.java:142] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 动态数据源-加载 applog 成功 
2020-01-08 22:49:56.085 [main] [DynamicRoutingDataSource.java:212] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 appconfig 
2020-01-08 22:49:56.391 [main] [TableInfoHelper.java:250] WARN  com.baomidou.mybatisplus.core.toolkit.TableInfoHelper - Warn: Could not find @TableId in Class: com.tjhnode.dataservice.model.entities.ClassificationModel. 
2020-01-08 22:49:56.455 [main] [TableInfoHelper.java:250] WARN  com.baomidou.mybatisplus.core.toolkit.TableInfoHelper - Warn: Could not find @TableId in Class: com.tjhnode.dataservice.model.entities.ConfigItemModel. 
2020-01-08 22:49:56.488 [main] [TableInfoHelper.java:250] WARN  com.baomidou.mybatisplus.core.toolkit.TableInfoHelper - Warn: Could not find @TableId in Class: com.tjhnode.dataservice.model.entities.Enumparameters. 
2020-01-08 22:49:56.518 [main] [TableInfoHelper.java:250] WARN  com.baomidou.mybatisplus.core.toolkit.TableInfoHelper - Warn: Could not find @TableId in Class: com.tjhnode.dataservice.model.entities.ParametersConfig. 
2020-01-08 22:49:56.546 [main] [TableInfoHelper.java:250] WARN  com.baomidou.mybatisplus.core.toolkit.TableInfoHelper - Warn: Could not find @TableId in Class: com.tjhnode.dataservice.model.entities.SqlConfigModel. 
2020-01-08 22:49:57.078 [main] [PropertySourcedRequestMappingHandlerMapping.java:69] INFO  springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)] 
2020-01-08 22:49:57.228 [main] [ExecutorConfigurationSupport.java:171] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor' 
2020-01-08 22:49:57.935 [main] [DocumentationPluginsBootstrapper.java:147] INFO  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Context refreshed 
2020-01-08 22:49:57.961 [main] [DocumentationPluginsBootstrapper.java:150] INFO  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s) 
2020-01-08 22:49:58.003 [main] [ApiListingReferenceScanner.java:41] INFO  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references 
2020-01-08 22:49:58.211 [main] [CachingOperationNameGenerator.java:40] INFO  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteConfigItemUsingPOST_1 
2020-01-08 22:49:58.220 [main] [CachingOperationNameGenerator.java:40] INFO  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: insertConfigItemUsingPOST_1 
2020-01-08 22:49:58.222 [main] [CachingOperationNameGenerator.java:40] INFO  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateConfigItemUsingPOST_1 
2020-01-08 22:49:58.239 [main] [DirectJDKLog.java:173] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-81"] 
2020-01-08 22:49:58.263 [main] [TomcatWebServer.java:204] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 81 (http) with context path '' 
2020-01-08 22:49:58.267 [main] [StartupInfoLogger.java:59] INFO  com.tjhnode.DataserviceApplication - Started DataserviceApplication in 7.976 seconds (JVM running for 11.25) 
2020-01-08 22:50:14.710 [http-nio-81-exec-2] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet' 
2020-01-08 22:50:14.710 [http-nio-81-exec-2] [FrameworkServlet.java:524] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet' 
2020-01-08 22:50:14.719 [http-nio-81-exec-2] [FrameworkServlet.java:546] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 9 ms 
2020-01-08 22:50:40.282 [Thread-17] [ExecutorConfigurationSupport.java:208] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor' 
2020-01-08 22:50:40.284 [Thread-17] [DynamicRoutingDataSource.java:182] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - closing dynamicDatasource  ing.... 
2020-01-08 22:50:40.296 [Thread-17] [DruidDataSource.java:1825] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closed 
2020-01-08 22:50:40.303 [Thread-17] [DruidDataSource.java:1825] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4} closed 
2020-01-08 22:50:40.309 [Thread-17] [DruidDataSource.java:1825] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed 
2020-01-08 22:50:40.317 [Thread-17] [DruidDataSource.java:1825] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3} closed 
2020-01-08 22:50:47.178 [main] [StartupInfoLogger.java:50] INFO  com.tjhnode.DataserviceApplication - Starting DataserviceApplication on tjh with PID 4156 (D:\JavaProject\dataservice\target\classes started by My in D:\JavaProject\dataservice) 
2020-01-08 22:50:47.189 [main] [SpringApplication.java:675] INFO  com.tjhnode.DataserviceApplication - No active profile set, falling back to default profiles: default 
2020-01-08 22:50:48.451 [main] [RepositoryConfigurationDelegate.java:244] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode! 
2020-01-08 22:50:48.460 [main] [RepositoryConfigurationDelegate.java:126] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode. 
2020-01-08 22:50:48.508 [main] [RepositoryConfigurationDelegate.java:182] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 24ms. Found 0 repository interfaces. 
2020-01-08 22:50:48.837 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$a5450b07] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 22:50:48.915 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 22:50:48.917 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$ed37bd8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 22:50:48.927 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 22:50:48.939 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 22:50:49.479 [main] [TomcatWebServer.java:90] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 81 (http) 
2020-01-08 22:50:49.493 [main] [DirectJDKLog.java:173] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-81"] 
2020-01-08 22:50:49.502 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat] 
2020-01-08 22:50:49.503 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16] 
2020-01-08 22:50:49.511 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded APR based Apache Tomcat Native library [1.2.21] using APR version [1.6.5]. 
2020-01-08 22:50:49.511 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true]. 
2020-01-08 22:50:49.512 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true] 
2020-01-08 22:50:50.574 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 1.0.2q  20 Nov 2018] 
2020-01-08 22:50:50.749 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext 
2020-01-08 22:50:50.750 [main] [ServletWebServerApplicationContext.java:296] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3447 ms 
2020-01-08 22:50:50.970 [main] [DynamicDataSourceCreator.java:113] INFO  com.baomidou.dynamic.datasource.DynamicDataSourceCreator - 动态数据源-检测到druid存在,如配置中未指定type,druid会默认配置 
2020-01-08 22:50:53.223 [main] [DruidDataSource.java:930] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1,master} inited 
2020-01-08 22:50:53.318 [main] [DruidDataSource.java:930] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2,appconfig} inited 
2020-01-08 22:50:53.386 [main] [DruidDataSource.java:930] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3,applog} inited 
2020-01-08 22:50:53.453 [main] [DruidDataSource.java:930] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4,app} inited 
2020-01-08 22:50:53.453 [main] [DynamicRoutingDataSource.java:203] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 初始共加载 4 个数据源 
2020-01-08 22:50:53.454 [main] [DynamicRoutingDataSource.java:142] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 动态数据源-加载 appconfig 成功 
2020-01-08 22:50:53.454 [main] [DynamicRoutingDataSource.java:142] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 动态数据源-加载 app 成功 
2020-01-08 22:50:53.454 [main] [DynamicRoutingDataSource.java:142] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 动态数据源-加载 master 成功 
2020-01-08 22:50:53.454 [main] [DynamicRoutingDataSource.java:142] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 动态数据源-加载 applog 成功 
2020-01-08 22:50:53.455 [main] [DynamicRoutingDataSource.java:212] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 appconfig 
2020-01-08 22:50:53.885 [main] [TableInfoHelper.java:250] WARN  com.baomidou.mybatisplus.core.toolkit.TableInfoHelper - Warn: Could not find @TableId in Class: com.tjhnode.dataservice.model.entities.ClassificationModel. 
2020-01-08 22:50:53.940 [main] [TableInfoHelper.java:250] WARN  com.baomidou.mybatisplus.core.toolkit.TableInfoHelper - Warn: Could not find @TableId in Class: com.tjhnode.dataservice.model.entities.ConfigItemModel. 
2020-01-08 22:50:53.989 [main] [TableInfoHelper.java:250] WARN  com.baomidou.mybatisplus.core.toolkit.TableInfoHelper - Warn: Could not find @TableId in Class: com.tjhnode.dataservice.model.entities.Enumparameters. 
2020-01-08 22:50:54.030 [main] [TableInfoHelper.java:250] WARN  com.baomidou.mybatisplus.core.toolkit.TableInfoHelper - Warn: Could not find @TableId in Class: com.tjhnode.dataservice.model.entities.ParametersConfig. 
2020-01-08 22:50:54.067 [main] [TableInfoHelper.java:250] WARN  com.baomidou.mybatisplus.core.toolkit.TableInfoHelper - Warn: Could not find @TableId in Class: com.tjhnode.dataservice.model.entities.SqlConfigModel. 
2020-01-08 22:50:54.653 [main] [PropertySourcedRequestMappingHandlerMapping.java:69] INFO  springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)] 
2020-01-08 22:50:54.894 [main] [ExecutorConfigurationSupport.java:171] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor' 
2020-01-08 22:50:55.617 [main] [DocumentationPluginsBootstrapper.java:147] INFO  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Context refreshed 
2020-01-08 22:50:55.633 [main] [DocumentationPluginsBootstrapper.java:150] INFO  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s) 
2020-01-08 22:50:55.674 [main] [ApiListingReferenceScanner.java:41] INFO  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references 
2020-01-08 22:50:55.862 [main] [CachingOperationNameGenerator.java:40] INFO  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteConfigItemUsingPOST_1 
2020-01-08 22:50:55.872 [main] [CachingOperationNameGenerator.java:40] INFO  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: insertConfigItemUsingPOST_1 
2020-01-08 22:50:55.874 [main] [CachingOperationNameGenerator.java:40] INFO  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateConfigItemUsingPOST_1 
2020-01-08 22:50:55.891 [main] [DirectJDKLog.java:173] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-81"] 
2020-01-08 22:50:55.916 [main] [TomcatWebServer.java:204] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 81 (http) with context path '' 
2020-01-08 22:50:55.919 [main] [StartupInfoLogger.java:59] INFO  com.tjhnode.DataserviceApplication - Started DataserviceApplication in 9.26 seconds (JVM running for 12.365) 
2020-01-08 22:51:15.469 [http-nio-81-exec-1] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet' 
2020-01-08 22:51:15.470 [http-nio-81-exec-1] [FrameworkServlet.java:524] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet' 
2020-01-08 22:51:15.479 [http-nio-81-exec-1] [FrameworkServlet.java:546] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 9 ms 
2020-01-08 22:51:35.541 [Thread-14] [ExecutorConfigurationSupport.java:208] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor' 
2020-01-08 22:51:35.543 [Thread-14] [DynamicRoutingDataSource.java:182] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - closing dynamicDatasource  ing.... 
2020-01-08 22:51:35.555 [Thread-14] [DruidDataSource.java:1825] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closed 
2020-01-08 22:51:35.565 [Thread-14] [DruidDataSource.java:1825] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4} closed 
2020-01-08 22:51:35.572 [Thread-14] [DruidDataSource.java:1825] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed 
2020-01-08 22:51:35.579 [Thread-14] [DruidDataSource.java:1825] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3} closed 
2020-01-08 22:51:42.175 [main] [StartupInfoLogger.java:50] INFO  com.tjhnode.DataserviceApplication - Starting DataserviceApplication on tjh with PID 12040 (D:\JavaProject\dataservice\target\classes started by My in D:\JavaProject\dataservice) 
2020-01-08 22:51:42.184 [main] [SpringApplication.java:675] INFO  com.tjhnode.DataserviceApplication - No active profile set, falling back to default profiles: default 
2020-01-08 22:51:43.334 [main] [RepositoryConfigurationDelegate.java:244] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode! 
2020-01-08 22:51:43.340 [main] [RepositoryConfigurationDelegate.java:126] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode. 
2020-01-08 22:51:43.380 [main] [RepositoryConfigurationDelegate.java:182] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 25ms. Found 0 repository interfaces. 
2020-01-08 22:51:43.784 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$67d38b28] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 22:51:43.843 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 22:51:43.846 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$d161fbf9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 22:51:43.852 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 22:51:43.858 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 22:51:44.273 [main] [TomcatWebServer.java:90] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 81 (http) 
2020-01-08 22:51:44.288 [main] [DirectJDKLog.java:173] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-81"] 
2020-01-08 22:51:44.295 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat] 
2020-01-08 22:51:44.296 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16] 
2020-01-08 22:51:44.303 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded APR based Apache Tomcat Native library [1.2.21] using APR version [1.6.5]. 
2020-01-08 22:51:44.304 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true]. 
2020-01-08 22:51:44.304 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true] 
2020-01-08 22:51:45.415 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 1.0.2q  20 Nov 2018] 
2020-01-08 22:51:45.585 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext 
2020-01-08 22:51:45.586 [main] [ServletWebServerApplicationContext.java:296] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3301 ms 
2020-01-08 22:51:45.772 [main] [DynamicDataSourceCreator.java:113] INFO  com.baomidou.dynamic.datasource.DynamicDataSourceCreator - 动态数据源-检测到druid存在,如配置中未指定type,druid会默认配置 
2020-01-08 22:51:47.685 [main] [DruidDataSource.java:930] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1,master} inited 
2020-01-08 22:51:47.749 [main] [DruidDataSource.java:930] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2,appconfig} inited 
2020-01-08 22:51:47.819 [main] [DruidDataSource.java:930] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3,applog} inited 
2020-01-08 22:51:47.881 [main] [DruidDataSource.java:930] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4,app} inited 
2020-01-08 22:51:47.882 [main] [DynamicRoutingDataSource.java:203] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 初始共加载 4 个数据源 
2020-01-08 22:51:47.882 [main] [DynamicRoutingDataSource.java:142] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 动态数据源-加载 appconfig 成功 
2020-01-08 22:51:47.882 [main] [DynamicRoutingDataSource.java:142] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 动态数据源-加载 app 成功 
2020-01-08 22:51:47.882 [main] [DynamicRoutingDataSource.java:142] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 动态数据源-加载 master 成功 
2020-01-08 22:51:47.883 [main] [DynamicRoutingDataSource.java:142] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 动态数据源-加载 applog 成功 
2020-01-08 22:51:47.883 [main] [DynamicRoutingDataSource.java:212] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 appconfig 
2020-01-08 22:51:48.192 [main] [TableInfoHelper.java:250] WARN  com.baomidou.mybatisplus.core.toolkit.TableInfoHelper - Warn: Could not find @TableId in Class: com.tjhnode.dataservice.model.entities.ClassificationModel. 
2020-01-08 22:51:48.235 [main] [TableInfoHelper.java:250] WARN  com.baomidou.mybatisplus.core.toolkit.TableInfoHelper - Warn: Could not find @TableId in Class: com.tjhnode.dataservice.model.entities.ConfigItemModel. 
2020-01-08 22:51:48.270 [main] [TableInfoHelper.java:250] WARN  com.baomidou.mybatisplus.core.toolkit.TableInfoHelper - Warn: Could not find @TableId in Class: com.tjhnode.dataservice.model.entities.Enumparameters. 
2020-01-08 22:51:48.302 [main] [TableInfoHelper.java:250] WARN  com.baomidou.mybatisplus.core.toolkit.TableInfoHelper - Warn: Could not find @TableId in Class: com.tjhnode.dataservice.model.entities.ParametersConfig. 
2020-01-08 22:51:48.331 [main] [TableInfoHelper.java:250] WARN  com.baomidou.mybatisplus.core.toolkit.TableInfoHelper - Warn: Could not find @TableId in Class: com.tjhnode.dataservice.model.entities.SqlConfigModel. 
2020-01-08 22:51:48.826 [main] [PropertySourcedRequestMappingHandlerMapping.java:69] INFO  springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)] 
2020-01-08 22:51:48.982 [main] [ExecutorConfigurationSupport.java:171] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor' 
2020-01-08 22:51:49.595 [main] [DocumentationPluginsBootstrapper.java:147] INFO  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Context refreshed 
2020-01-08 22:51:49.610 [main] [DocumentationPluginsBootstrapper.java:150] INFO  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s) 
2020-01-08 22:51:49.647 [main] [ApiListingReferenceScanner.java:41] INFO  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references 
2020-01-08 22:51:49.845 [main] [CachingOperationNameGenerator.java:40] INFO  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteConfigItemUsingPOST_1 
2020-01-08 22:51:49.854 [main] [CachingOperationNameGenerator.java:40] INFO  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: insertConfigItemUsingPOST_1 
2020-01-08 22:51:49.857 [main] [CachingOperationNameGenerator.java:40] INFO  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateConfigItemUsingPOST_1 
2020-01-08 22:51:49.873 [main] [DirectJDKLog.java:173] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-81"] 
2020-01-08 22:51:49.898 [main] [TomcatWebServer.java:204] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 81 (http) with context path '' 
2020-01-08 22:51:49.902 [main] [StartupInfoLogger.java:59] INFO  com.tjhnode.DataserviceApplication - Started DataserviceApplication in 8.204 seconds (JVM running for 11.105) 
2020-01-08 22:52:10.779 [http-nio-81-exec-1] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet' 
2020-01-08 22:52:10.779 [http-nio-81-exec-1] [FrameworkServlet.java:524] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet' 
2020-01-08 22:52:10.789 [http-nio-81-exec-1] [FrameworkServlet.java:546] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 9 ms 
2020-01-08 22:53:40.286 [Thread-18] [ExecutorConfigurationSupport.java:208] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor' 
2020-01-08 22:53:40.288 [Thread-18] [DynamicRoutingDataSource.java:182] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - closing dynamicDatasource  ing.... 
2020-01-08 22:53:40.299 [Thread-18] [DruidDataSource.java:1825] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closed 
2020-01-08 22:53:40.306 [Thread-18] [DruidDataSource.java:1825] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4} closed 
2020-01-08 22:53:40.313 [Thread-18] [DruidDataSource.java:1825] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed 
2020-01-08 22:53:40.321 [Thread-18] [DruidDataSource.java:1825] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3} closed 
2020-01-08 22:53:46.880 [main] [StartupInfoLogger.java:50] INFO  com.tjhnode.DataserviceApplication - Starting DataserviceApplication on tjh with PID 11680 (D:\JavaProject\dataservice\target\classes started by My in D:\JavaProject\dataservice) 
2020-01-08 22:53:46.928 [main] [SpringApplication.java:675] INFO  com.tjhnode.DataserviceApplication - No active profile set, falling back to default profiles: default 
2020-01-08 22:53:48.044 [main] [RepositoryConfigurationDelegate.java:244] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode! 
2020-01-08 22:53:48.049 [main] [RepositoryConfigurationDelegate.java:126] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode. 
2020-01-08 22:53:48.098 [main] [RepositoryConfigurationDelegate.java:182] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 31ms. Found 0 repository interfaces. 
2020-01-08 22:53:48.559 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$68ad8ff7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 22:53:48.623 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 22:53:48.626 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$d23c00c8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 22:53:48.632 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 22:53:48.638 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 22:53:49.178 [main] [TomcatWebServer.java:90] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 81 (http) 
2020-01-08 22:53:49.193 [main] [DirectJDKLog.java:173] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-81"] 
2020-01-08 22:53:49.201 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat] 
2020-01-08 22:53:49.202 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16] 
2020-01-08 22:53:49.209 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded APR based Apache Tomcat Native library [1.2.21] using APR version [1.6.5]. 
2020-01-08 22:53:49.209 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true]. 
2020-01-08 22:53:49.210 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true] 
2020-01-08 22:53:50.299 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 1.0.2q  20 Nov 2018] 
2020-01-08 22:53:50.452 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext 
2020-01-08 22:53:50.453 [main] [ServletWebServerApplicationContext.java:296] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3465 ms 
2020-01-08 22:53:50.686 [main] [DynamicDataSourceCreator.java:113] INFO  com.baomidou.dynamic.datasource.DynamicDataSourceCreator - 动态数据源-检测到druid存在,如配置中未指定type,druid会默认配置 
2020-01-08 22:53:52.651 [main] [DruidDataSource.java:930] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1,master} inited 
2020-01-08 22:53:52.738 [main] [DruidDataSource.java:930] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2,appconfig} inited 
2020-01-08 22:53:52.803 [main] [DruidDataSource.java:930] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3,applog} inited 
2020-01-08 22:53:52.897 [main] [DruidDataSource.java:930] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4,app} inited 
2020-01-08 22:53:52.898 [main] [DynamicRoutingDataSource.java:203] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 初始共加载 4 个数据源 
2020-01-08 22:53:52.898 [main] [DynamicRoutingDataSource.java:142] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 动态数据源-加载 appconfig 成功 
2020-01-08 22:53:52.899 [main] [DynamicRoutingDataSource.java:142] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 动态数据源-加载 app 成功 
2020-01-08 22:53:52.899 [main] [DynamicRoutingDataSource.java:142] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 动态数据源-加载 master 成功 
2020-01-08 22:53:52.899 [main] [DynamicRoutingDataSource.java:142] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 动态数据源-加载 applog 成功 
2020-01-08 22:53:52.900 [main] [DynamicRoutingDataSource.java:212] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 appconfig 
2020-01-08 22:53:52.929 [main] [AbstractApplicationContext.java:557] WARN  org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'classficationController': Unsatisfied dependency expressed through field 'classificationServiceImpl'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'classificationServiceImpl': Unsatisfied dependency expressed through field 'baseMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'classificationMapper' defined in file [D:\JavaProject\dataservice\target\classes\com\tjhnode\dataservice\mapper\ClassificationMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [com/baomidou/mybatisplus/autoconfigure/MybatisPlusAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.lang.IllegalStateException: SFunction 'configuration' and 'configLocation' can not specified with together 
2020-01-08 22:53:52.931 [main] [DynamicRoutingDataSource.java:182] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - closing dynamicDatasource  ing.... 
2020-01-08 22:53:52.942 [main] [DruidDataSource.java:1825] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closed 
2020-01-08 22:53:52.944 [main] [DruidDataSource.java:1825] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4} closed 
2020-01-08 22:53:52.946 [main] [DruidDataSource.java:1825] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed 
2020-01-08 22:53:52.949 [main] [DruidDataSource.java:1825] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3} closed 
2020-01-08 22:53:52.952 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat] 
2020-01-08 22:53:52.966 [main] [ConditionEvaluationReportLoggingListener.java:142] INFO  org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled. 
2020-01-08 22:53:52.977 [main] [SpringApplication.java:858] ERROR org.springframework.boot.SpringApplication - Application run failed 
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'classficationController': Unsatisfied dependency expressed through field 'classificationServiceImpl'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'classificationServiceImpl': Unsatisfied dependency expressed through field 'baseMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'classificationMapper' defined in file [D:\JavaProject\dataservice\target\classes\com\tjhnode\dataservice\mapper\ClassificationMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [com/baomidou/mybatisplus/autoconfigure/MybatisPlusAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.lang.IllegalStateException: SFunction 'configuration' and 'configLocation' can not specified with together
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877) ~[spring-context-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549) ~[spring-context-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142) ~[spring-boot-2.1.3.RELEASE.jar:2.1.3.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775) [spring-boot-2.1.3.RELEASE.jar:2.1.3.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397) [spring-boot-2.1.3.RELEASE.jar:2.1.3.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316) [spring-boot-2.1.3.RELEASE.jar:2.1.3.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260) [spring-boot-2.1.3.RELEASE.jar:2.1.3.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248) [spring-boot-2.1.3.RELEASE.jar:2.1.3.RELEASE]
	at com.tjhnode.DataserviceApplication.main(DataserviceApplication.java:12) [classes/:?]
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'classificationServiceImpl': Unsatisfied dependency expressed through field 'baseMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'classificationMapper' defined in file [D:\JavaProject\dataservice\target\classes\com\tjhnode\dataservice\mapper\ClassificationMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [com/baomidou/mybatisplus/autoconfigure/MybatisPlusAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.lang.IllegalStateException: SFunction 'configuration' and 'configLocation' can not specified with together
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	... 19 more
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'classificationMapper' defined in file [D:\JavaProject\dataservice\target\classes\com\tjhnode\dataservice\mapper\ClassificationMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [com/baomidou/mybatisplus/autoconfigure/MybatisPlusAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.lang.IllegalStateException: SFunction 'configuration' and 'configLocation' can not specified with together
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1499) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1379) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	... 19 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [com/baomidou/mybatisplus/autoconfigure/MybatisPlusAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.lang.IllegalStateException: SFunction 'configuration' and 'configLocation' can not specified with together
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:627) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:607) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1484) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1379) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	... 19 more
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is java.lang.IllegalStateException: SFunction 'configuration' and 'configLocation' can not specified with together
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:622) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:607) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1484) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1379) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	... 19 more
Caused by: java.lang.IllegalStateException: SFunction 'configuration' and 'configLocation' can not specified with together
	at org.springframework.util.Assert.state(Assert.java:73) ~[spring-core-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at com.baomidou.mybatisplus.extension.spring.MybatisSqlSessionFactoryBean.afterPropertiesSet(MybatisSqlSessionFactoryBean.java:395) ~[mybatis-plus-extension-3.0.6.jar:3.0.6]
	at com.baomidou.mybatisplus.extension.spring.MybatisSqlSessionFactoryBean.getObject(MybatisSqlSessionFactoryBean.java:690) ~[mybatis-plus-extension-3.0.6.jar:3.0.6]
	at com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration.sqlSessionFactory(MybatisPlusAutoConfiguration.java:165) ~[mybatis-plus-boot-starter-3.0.6.jar:3.0.6]
	at com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$a675fc91.CGLIB$sqlSessionFactory$0(<generated>) ~[mybatis-plus-boot-starter-3.0.6.jar:3.0.6]
	at com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$a675fc91$$FastClassBySpringCGLIB$$3f31cbec.invoke(<generated>) ~[mybatis-plus-boot-starter-3.0.6.jar:3.0.6]
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244) ~[spring-core-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:363) ~[spring-context-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$a675fc91.sqlSessionFactory(<generated>) ~[mybatis-plus-boot-starter-3.0.6.jar:3.0.6]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_131]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_131]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_131]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_131]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:622) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:607) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1484) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1379) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593) ~[spring-beans-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	... 19 more
2020-01-08 22:54:04.330 [main] [StartupInfoLogger.java:50] INFO  com.tjhnode.DataserviceApplication - Starting DataserviceApplication on tjh with PID 384 (D:\JavaProject\dataservice\target\classes started by My in D:\JavaProject\dataservice) 
2020-01-08 22:54:04.343 [main] [SpringApplication.java:675] INFO  com.tjhnode.DataserviceApplication - No active profile set, falling back to default profiles: default 
2020-01-08 22:54:05.499 [main] [RepositoryConfigurationDelegate.java:244] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode! 
2020-01-08 22:54:05.503 [main] [RepositoryConfigurationDelegate.java:126] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode. 
2020-01-08 22:54:05.543 [main] [RepositoryConfigurationDelegate.java:182] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 26ms. Found 0 repository interfaces. 
2020-01-08 22:54:05.939 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$1632203b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 22:54:06.002 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 22:54:06.005 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$7fc0910c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 22:54:06.012 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 22:54:06.018 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 22:54:06.600 [main] [TomcatWebServer.java:90] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 81 (http) 
2020-01-08 22:54:06.624 [main] [DirectJDKLog.java:173] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-81"] 
2020-01-08 22:54:06.637 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat] 
2020-01-08 22:54:06.638 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16] 
2020-01-08 22:54:06.653 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded APR based Apache Tomcat Native library [1.2.21] using APR version [1.6.5]. 
2020-01-08 22:54:06.654 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true]. 
2020-01-08 22:54:06.655 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true] 
2020-01-08 22:54:07.747 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 1.0.2q  20 Nov 2018] 
2020-01-08 22:54:07.904 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext 
2020-01-08 22:54:07.904 [main] [ServletWebServerApplicationContext.java:296] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3464 ms 
2020-01-08 22:54:08.111 [main] [DynamicDataSourceCreator.java:113] INFO  com.baomidou.dynamic.datasource.DynamicDataSourceCreator - 动态数据源-检测到druid存在,如配置中未指定type,druid会默认配置 
2020-01-08 22:54:10.303 [main] [DruidDataSource.java:930] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1,master} inited 
2020-01-08 22:54:10.386 [main] [DruidDataSource.java:930] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2,appconfig} inited 
2020-01-08 22:54:10.442 [main] [DruidDataSource.java:930] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3,applog} inited 
2020-01-08 22:54:10.490 [main] [DruidDataSource.java:930] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4,app} inited 
2020-01-08 22:54:10.490 [main] [DynamicRoutingDataSource.java:203] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 初始共加载 4 个数据源 
2020-01-08 22:54:10.491 [main] [DynamicRoutingDataSource.java:142] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 动态数据源-加载 appconfig 成功 
2020-01-08 22:54:10.491 [main] [DynamicRoutingDataSource.java:142] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 动态数据源-加载 app 成功 
2020-01-08 22:54:10.491 [main] [DynamicRoutingDataSource.java:142] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 动态数据源-加载 master 成功 
2020-01-08 22:54:10.491 [main] [DynamicRoutingDataSource.java:142] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 动态数据源-加载 applog 成功 
2020-01-08 22:54:10.491 [main] [DynamicRoutingDataSource.java:212] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 appconfig 
2020-01-08 22:54:10.792 [main] [TableInfoHelper.java:250] WARN  com.baomidou.mybatisplus.core.toolkit.TableInfoHelper - Warn: Could not find @TableId in Class: com.tjhnode.dataservice.model.entities.ClassificationModel. 
2020-01-08 22:54:10.861 [main] [TableInfoHelper.java:250] WARN  com.baomidou.mybatisplus.core.toolkit.TableInfoHelper - Warn: Could not find @TableId in Class: com.tjhnode.dataservice.model.entities.ConfigItemModel. 
2020-01-08 22:54:10.900 [main] [TableInfoHelper.java:250] WARN  com.baomidou.mybatisplus.core.toolkit.TableInfoHelper - Warn: Could not find @TableId in Class: com.tjhnode.dataservice.model.entities.Enumparameters. 
2020-01-08 22:54:10.931 [main] [TableInfoHelper.java:250] WARN  com.baomidou.mybatisplus.core.toolkit.TableInfoHelper - Warn: Could not find @TableId in Class: com.tjhnode.dataservice.model.entities.ParametersConfig. 
2020-01-08 22:54:10.960 [main] [TableInfoHelper.java:250] WARN  com.baomidou.mybatisplus.core.toolkit.TableInfoHelper - Warn: Could not find @TableId in Class: com.tjhnode.dataservice.model.entities.SqlConfigModel. 
2020-01-08 22:54:11.484 [main] [PropertySourcedRequestMappingHandlerMapping.java:69] INFO  springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)] 
2020-01-08 22:54:11.699 [main] [ExecutorConfigurationSupport.java:171] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor' 
2020-01-08 22:54:12.380 [main] [DocumentationPluginsBootstrapper.java:147] INFO  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Context refreshed 
2020-01-08 22:54:12.403 [main] [DocumentationPluginsBootstrapper.java:150] INFO  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s) 
2020-01-08 22:54:12.444 [main] [ApiListingReferenceScanner.java:41] INFO  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references 
2020-01-08 22:54:12.684 [main] [CachingOperationNameGenerator.java:40] INFO  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteConfigItemUsingPOST_1 
2020-01-08 22:54:12.699 [main] [CachingOperationNameGenerator.java:40] INFO  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: insertConfigItemUsingPOST_1 
2020-01-08 22:54:12.704 [main] [CachingOperationNameGenerator.java:40] INFO  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateConfigItemUsingPOST_1 
2020-01-08 22:54:12.731 [main] [DirectJDKLog.java:173] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-81"] 
2020-01-08 22:54:12.759 [main] [TomcatWebServer.java:204] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 81 (http) with context path '' 
2020-01-08 22:54:12.764 [main] [StartupInfoLogger.java:59] INFO  com.tjhnode.DataserviceApplication - Started DataserviceApplication in 8.963 seconds (JVM running for 12.376) 
2020-01-08 22:54:21.357 [http-nio-81-exec-1] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet' 
2020-01-08 22:54:21.358 [http-nio-81-exec-1] [FrameworkServlet.java:524] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet' 
2020-01-08 22:54:21.374 [http-nio-81-exec-1] [FrameworkServlet.java:546] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 16 ms 
2020-01-08 22:59:58.659 [Thread-13] [ExecutorConfigurationSupport.java:208] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor' 
2020-01-08 22:59:58.662 [Thread-13] [DynamicRoutingDataSource.java:182] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - closing dynamicDatasource  ing.... 
2020-01-08 22:59:58.671 [Thread-13] [DruidDataSource.java:1825] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closed 
2020-01-08 22:59:58.678 [Thread-13] [DruidDataSource.java:1825] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4} closed 
2020-01-08 22:59:58.684 [Thread-13] [DruidDataSource.java:1825] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed 
2020-01-08 22:59:58.691 [Thread-13] [DruidDataSource.java:1825] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3} closed 
2020-01-08 23:01:18.104 [main] [StartupInfoLogger.java:50] INFO  com.tjhnode.DataserviceApplication - Starting DataserviceApplication on tjh with PID 3328 (D:\JavaProject\dataservice\target\classes started by My in D:\JavaProject\dataservice) 
2020-01-08 23:01:18.113 [main] [SpringApplication.java:675] INFO  com.tjhnode.DataserviceApplication - No active profile set, falling back to default profiles: default 
2020-01-08 23:01:19.568 [main] [RepositoryConfigurationDelegate.java:244] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode! 
2020-01-08 23:01:19.573 [main] [RepositoryConfigurationDelegate.java:126] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode. 
2020-01-08 23:01:19.615 [main] [RepositoryConfigurationDelegate.java:182] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 23ms. Found 0 repository interfaces. 
2020-01-08 23:01:19.938 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d45f0827] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 23:01:19.988 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 23:01:19.990 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$3ded78f8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 23:01:19.997 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 23:01:20.002 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 23:01:20.408 [main] [TomcatWebServer.java:90] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 81 (http) 
2020-01-08 23:01:20.422 [main] [DirectJDKLog.java:173] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-81"] 
2020-01-08 23:01:20.430 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat] 
2020-01-08 23:01:20.431 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16] 
2020-01-08 23:01:20.438 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded APR based Apache Tomcat Native library [1.2.21] using APR version [1.6.5]. 
2020-01-08 23:01:20.439 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true]. 
2020-01-08 23:01:20.439 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true] 
2020-01-08 23:01:21.497 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 1.0.2q  20 Nov 2018] 
2020-01-08 23:01:21.647 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext 
2020-01-08 23:01:21.647 [main] [ServletWebServerApplicationContext.java:296] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3447 ms 
2020-01-08 23:01:21.816 [main] [DynamicDataSourceCreator.java:113] INFO  com.baomidou.dynamic.datasource.DynamicDataSourceCreator - 动态数据源-检测到druid存在,如配置中未指定type,druid会默认配置 
2020-01-08 23:01:23.856 [main] [DruidDataSource.java:930] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1,master} inited 
2020-01-08 23:01:23.934 [main] [DruidDataSource.java:930] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2,appconfig} inited 
2020-01-08 23:01:23.999 [main] [DruidDataSource.java:930] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3,applog} inited 
2020-01-08 23:01:24.067 [main] [DruidDataSource.java:930] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4,app} inited 
2020-01-08 23:01:24.067 [main] [DynamicRoutingDataSource.java:203] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 初始共加载 4 个数据源 
2020-01-08 23:01:24.068 [main] [DynamicRoutingDataSource.java:142] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 动态数据源-加载 appconfig 成功 
2020-01-08 23:01:24.068 [main] [DynamicRoutingDataSource.java:142] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 动态数据源-加载 app 成功 
2020-01-08 23:01:24.068 [main] [DynamicRoutingDataSource.java:142] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 动态数据源-加载 master 成功 
2020-01-08 23:01:24.068 [main] [DynamicRoutingDataSource.java:142] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 动态数据源-加载 applog 成功 
2020-01-08 23:01:24.068 [main] [DynamicRoutingDataSource.java:212] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 appconfig 
2020-01-08 23:01:24.372 [main] [TableInfoHelper.java:250] WARN  com.baomidou.mybatisplus.core.toolkit.TableInfoHelper - Warn: Could not find @TableId in Class: com.tjhnode.dataservice.model.entities.ClassificationModel. 
2020-01-08 23:01:24.449 [main] [TableInfoHelper.java:250] WARN  com.baomidou.mybatisplus.core.toolkit.TableInfoHelper - Warn: Could not find @TableId in Class: com.tjhnode.dataservice.model.entities.ConfigItemModel. 
2020-01-08 23:01:24.490 [main] [TableInfoHelper.java:250] WARN  com.baomidou.mybatisplus.core.toolkit.TableInfoHelper - Warn: Could not find @TableId in Class: com.tjhnode.dataservice.model.entities.Enumparameters. 
2020-01-08 23:01:24.527 [main] [TableInfoHelper.java:250] WARN  com.baomidou.mybatisplus.core.toolkit.TableInfoHelper - Warn: Could not find @TableId in Class: com.tjhnode.dataservice.model.entities.ParametersConfig. 
2020-01-08 23:01:24.560 [main] [TableInfoHelper.java:250] WARN  com.baomidou.mybatisplus.core.toolkit.TableInfoHelper - Warn: Could not find @TableId in Class: com.tjhnode.dataservice.model.entities.SqlConfigModel. 
2020-01-08 23:01:25.112 [main] [PropertySourcedRequestMappingHandlerMapping.java:69] INFO  springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)] 
2020-01-08 23:01:25.284 [main] [ExecutorConfigurationSupport.java:171] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor' 
2020-01-08 23:01:25.981 [main] [DocumentationPluginsBootstrapper.java:147] INFO  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Context refreshed 
2020-01-08 23:01:25.997 [main] [DocumentationPluginsBootstrapper.java:150] INFO  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s) 
2020-01-08 23:01:26.034 [main] [ApiListingReferenceScanner.java:41] INFO  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references 
2020-01-08 23:01:26.237 [main] [CachingOperationNameGenerator.java:40] INFO  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteConfigItemUsingPOST_1 
2020-01-08 23:01:26.249 [main] [CachingOperationNameGenerator.java:40] INFO  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: insertConfigItemUsingPOST_1 
2020-01-08 23:01:26.253 [main] [CachingOperationNameGenerator.java:40] INFO  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateConfigItemUsingPOST_1 
2020-01-08 23:01:26.270 [main] [DirectJDKLog.java:173] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-81"] 
2020-01-08 23:01:26.298 [main] [TomcatWebServer.java:204] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 81 (http) with context path '' 
2020-01-08 23:01:26.301 [main] [StartupInfoLogger.java:59] INFO  com.tjhnode.DataserviceApplication - Started DataserviceApplication in 8.617 seconds (JVM running for 11.804) 
2020-01-08 23:01:31.846 [http-nio-81-exec-1] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet' 
2020-01-08 23:01:31.846 [http-nio-81-exec-1] [FrameworkServlet.java:524] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet' 
2020-01-08 23:01:31.857 [http-nio-81-exec-1] [FrameworkServlet.java:546] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 11 ms 
2020-01-08 23:02:04.392 [http-nio-81-exec-7] [AbstractHandlerExceptionResolver.java:197] WARN  org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported] 
2020-01-08 23:02:33.522 [http-nio-81-exec-5] [AbstractHandlerExceptionResolver.java:197] WARN  org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.HttpMediaTypeNotSupportedException: Content type 'application/x-www-form-urlencoded;charset=UTF-8' not supported] 
2020-01-08 23:04:09.038 [Thread-12] [ExecutorConfigurationSupport.java:208] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor' 
2020-01-08 23:04:09.040 [Thread-12] [DynamicRoutingDataSource.java:182] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - closing dynamicDatasource  ing.... 
2020-01-08 23:04:09.051 [Thread-12] [DruidDataSource.java:1825] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closed 
2020-01-08 23:04:09.059 [Thread-12] [DruidDataSource.java:1825] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4} closed 
2020-01-08 23:04:09.066 [Thread-12] [DruidDataSource.java:1825] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed 
2020-01-08 23:04:09.076 [Thread-12] [DruidDataSource.java:1825] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3} closed 
2020-01-08 23:04:18.695 [main] [StartupInfoLogger.java:50] INFO  com.tjhnode.DataserviceApplication - Starting DataserviceApplication on tjh with PID 11680 (D:\JavaProject\dataservice\target\classes started by My in D:\JavaProject\dataservice) 
2020-01-08 23:04:18.705 [main] [SpringApplication.java:675] INFO  com.tjhnode.DataserviceApplication - No active profile set, falling back to default profiles: default 
2020-01-08 23:04:19.819 [main] [RepositoryConfigurationDelegate.java:244] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode! 
2020-01-08 23:04:19.824 [main] [RepositoryConfigurationDelegate.java:126] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode. 
2020-01-08 23:04:19.864 [main] [RepositoryConfigurationDelegate.java:182] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 25ms. Found 0 repository interfaces. 
2020-01-08 23:04:20.205 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d2d5375] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 23:04:20.255 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 23:04:20.258 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$76bbc446] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 23:04:20.263 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 23:04:20.268 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 23:04:20.675 [main] [TomcatWebServer.java:90] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 81 (http) 
2020-01-08 23:04:20.688 [main] [DirectJDKLog.java:173] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-81"] 
2020-01-08 23:04:20.695 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat] 
2020-01-08 23:04:20.696 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16] 
2020-01-08 23:04:20.702 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded APR based Apache Tomcat Native library [1.2.21] using APR version [1.6.5]. 
2020-01-08 23:04:20.702 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true]. 
2020-01-08 23:04:20.703 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true] 
2020-01-08 23:04:21.770 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 1.0.2q  20 Nov 2018] 
2020-01-08 23:04:21.916 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext 
2020-01-08 23:04:21.916 [main] [ServletWebServerApplicationContext.java:296] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3115 ms 
2020-01-08 23:04:22.056 [main] [DynamicDataSourceCreator.java:113] INFO  com.baomidou.dynamic.datasource.DynamicDataSourceCreator - 动态数据源-检测到druid存在,如配置中未指定type,druid会默认配置 
2020-01-08 23:04:23.948 [main] [DruidDataSource.java:930] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1,master} inited 
2020-01-08 23:04:24.011 [main] [DruidDataSource.java:930] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2,appconfig} inited 
2020-01-08 23:04:24.075 [main] [DruidDataSource.java:930] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3,applog} inited 
2020-01-08 23:04:24.150 [main] [DruidDataSource.java:930] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4,app} inited 
2020-01-08 23:04:24.150 [main] [DynamicRoutingDataSource.java:203] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 初始共加载 4 个数据源 
2020-01-08 23:04:24.151 [main] [DynamicRoutingDataSource.java:142] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 动态数据源-加载 appconfig 成功 
2020-01-08 23:04:24.151 [main] [DynamicRoutingDataSource.java:142] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 动态数据源-加载 app 成功 
2020-01-08 23:04:24.151 [main] [DynamicRoutingDataSource.java:142] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 动态数据源-加载 master 成功 
2020-01-08 23:04:24.151 [main] [DynamicRoutingDataSource.java:142] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 动态数据源-加载 applog 成功 
2020-01-08 23:04:24.151 [main] [DynamicRoutingDataSource.java:212] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 appconfig 
2020-01-08 23:04:24.653 [main] [TableInfoHelper.java:250] WARN  com.baomidou.mybatisplus.core.toolkit.TableInfoHelper - Warn: Could not find @TableId in Class: com.tjhnode.dataservice.model.entities.ClassificationModel. 
2020-01-08 23:04:24.711 [main] [TableInfoHelper.java:250] WARN  com.baomidou.mybatisplus.core.toolkit.TableInfoHelper - Warn: Could not find @TableId in Class: com.tjhnode.dataservice.model.entities.ConfigItemModel. 
2020-01-08 23:04:24.757 [main] [TableInfoHelper.java:250] WARN  com.baomidou.mybatisplus.core.toolkit.TableInfoHelper - Warn: Could not find @TableId in Class: com.tjhnode.dataservice.model.entities.Enumparameters. 
2020-01-08 23:04:24.796 [main] [TableInfoHelper.java:250] WARN  com.baomidou.mybatisplus.core.toolkit.TableInfoHelper - Warn: Could not find @TableId in Class: com.tjhnode.dataservice.model.entities.ParametersConfig. 
2020-01-08 23:04:24.837 [main] [TableInfoHelper.java:250] WARN  com.baomidou.mybatisplus.core.toolkit.TableInfoHelper - Warn: Could not find @TableId in Class: com.tjhnode.dataservice.model.entities.SqlConfigModel. 
2020-01-08 23:04:25.616 [main] [PropertySourcedRequestMappingHandlerMapping.java:69] INFO  springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)] 
2020-01-08 23:04:25.823 [main] [ExecutorConfigurationSupport.java:171] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor' 
2020-01-08 23:04:26.646 [main] [DocumentationPluginsBootstrapper.java:147] INFO  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Context refreshed 
2020-01-08 23:04:26.662 [main] [DocumentationPluginsBootstrapper.java:150] INFO  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s) 
2020-01-08 23:04:26.700 [main] [ApiListingReferenceScanner.java:41] INFO  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references 
2020-01-08 23:04:27.483 [main] [CachingOperationNameGenerator.java:40] INFO  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteConfigItemUsingPOST_1 
2020-01-08 23:04:27.494 [main] [CachingOperationNameGenerator.java:40] INFO  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: insertConfigItemUsingPOST_1 
2020-01-08 23:04:27.496 [main] [CachingOperationNameGenerator.java:40] INFO  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateConfigItemUsingPOST_1 
2020-01-08 23:04:27.514 [main] [DirectJDKLog.java:173] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-81"] 
2020-01-08 23:04:27.539 [main] [TomcatWebServer.java:204] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 81 (http) with context path '' 
2020-01-08 23:04:27.542 [main] [StartupInfoLogger.java:59] INFO  com.tjhnode.DataserviceApplication - Started DataserviceApplication in 9.339 seconds (JVM running for 12.294) 
2020-01-08 23:04:44.437 [http-nio-81-exec-1] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet' 
2020-01-08 23:04:44.437 [http-nio-81-exec-1] [FrameworkServlet.java:524] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet' 
2020-01-08 23:04:44.446 [http-nio-81-exec-1] [FrameworkServlet.java:546] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 9 ms 
2020-01-08 23:05:02.988 [Thread-15] [ExecutorConfigurationSupport.java:208] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor' 
2020-01-08 23:05:02.990 [Thread-15] [DynamicRoutingDataSource.java:182] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - closing dynamicDatasource  ing.... 
2020-01-08 23:05:03.001 [Thread-15] [DruidDataSource.java:1825] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closed 
2020-01-08 23:05:03.011 [Thread-15] [DruidDataSource.java:1825] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4} closed 
2020-01-08 23:05:03.018 [Thread-15] [DruidDataSource.java:1825] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed 
2020-01-08 23:05:03.027 [Thread-15] [DruidDataSource.java:1825] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3} closed 
2020-01-08 23:05:10.814 [main] [StartupInfoLogger.java:50] INFO  com.tjhnode.DataserviceApplication - Starting DataserviceApplication on tjh with PID 12144 (D:\JavaProject\dataservice\target\classes started by My in D:\JavaProject\dataservice) 
2020-01-08 23:05:10.826 [main] [SpringApplication.java:675] INFO  com.tjhnode.DataserviceApplication - No active profile set, falling back to default profiles: default 
2020-01-08 23:05:12.200 [main] [RepositoryConfigurationDelegate.java:244] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode! 
2020-01-08 23:05:12.205 [main] [RepositoryConfigurationDelegate.java:126] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode. 
2020-01-08 23:05:12.248 [main] [RepositoryConfigurationDelegate.java:182] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 25ms. Found 0 repository interfaces. 
2020-01-08 23:05:12.599 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$982f4523] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 23:05:12.651 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 23:05:12.653 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$1bdb5f4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 23:05:12.659 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 23:05:12.664 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 23:05:13.063 [main] [TomcatWebServer.java:90] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 81 (http) 
2020-01-08 23:05:13.080 [main] [DirectJDKLog.java:173] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-81"] 
2020-01-08 23:05:13.094 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat] 
2020-01-08 23:05:13.095 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16] 
2020-01-08 23:05:13.106 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded APR based Apache Tomcat Native library [1.2.21] using APR version [1.6.5]. 
2020-01-08 23:05:13.107 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true]. 
2020-01-08 23:05:13.107 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true] 
2020-01-08 23:05:14.175 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 1.0.2q  20 Nov 2018] 
2020-01-08 23:05:14.319 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext 
2020-01-08 23:05:14.319 [main] [ServletWebServerApplicationContext.java:296] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3386 ms 
2020-01-08 23:05:14.470 [main] [DynamicDataSourceCreator.java:113] INFO  com.baomidou.dynamic.datasource.DynamicDataSourceCreator - 动态数据源-检测到druid存在,如配置中未指定type,druid会默认配置 
2020-01-08 23:05:16.344 [main] [DruidDataSource.java:930] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1,master} inited 
2020-01-08 23:05:16.404 [main] [DruidDataSource.java:930] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2,appconfig} inited 
2020-01-08 23:05:16.483 [main] [DruidDataSource.java:930] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3,applog} inited 
2020-01-08 23:05:16.540 [main] [DruidDataSource.java:930] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4,app} inited 
2020-01-08 23:05:16.541 [main] [DynamicRoutingDataSource.java:203] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 初始共加载 4 个数据源 
2020-01-08 23:05:16.541 [main] [DynamicRoutingDataSource.java:142] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 动态数据源-加载 appconfig 成功 
2020-01-08 23:05:16.541 [main] [DynamicRoutingDataSource.java:142] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 动态数据源-加载 app 成功 
2020-01-08 23:05:16.542 [main] [DynamicRoutingDataSource.java:142] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 动态数据源-加载 master 成功 
2020-01-08 23:05:16.542 [main] [DynamicRoutingDataSource.java:142] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 动态数据源-加载 applog 成功 
2020-01-08 23:05:16.542 [main] [DynamicRoutingDataSource.java:212] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 appconfig 
2020-01-08 23:05:16.842 [main] [TableInfoHelper.java:250] WARN  com.baomidou.mybatisplus.core.toolkit.TableInfoHelper - Warn: Could not find @TableId in Class: com.tjhnode.dataservice.model.entities.ClassificationModel. 
2020-01-08 23:05:16.882 [main] [TableInfoHelper.java:250] WARN  com.baomidou.mybatisplus.core.toolkit.TableInfoHelper - Warn: Could not find @TableId in Class: com.tjhnode.dataservice.model.entities.ConfigItemModel. 
2020-01-08 23:05:16.918 [main] [TableInfoHelper.java:250] WARN  com.baomidou.mybatisplus.core.toolkit.TableInfoHelper - Warn: Could not find @TableId in Class: com.tjhnode.dataservice.model.entities.Enumparameters. 
2020-01-08 23:05:16.947 [main] [TableInfoHelper.java:250] WARN  com.baomidou.mybatisplus.core.toolkit.TableInfoHelper - Warn: Could not find @TableId in Class: com.tjhnode.dataservice.model.entities.ParametersConfig. 
2020-01-08 23:05:16.977 [main] [TableInfoHelper.java:250] WARN  com.baomidou.mybatisplus.core.toolkit.TableInfoHelper - Warn: Could not find @TableId in Class: com.tjhnode.dataservice.model.entities.SqlConfigModel. 
2020-01-08 23:05:17.485 [main] [PropertySourcedRequestMappingHandlerMapping.java:69] INFO  springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)] 
2020-01-08 23:05:17.646 [main] [ExecutorConfigurationSupport.java:171] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor' 
2020-01-08 23:05:18.281 [main] [DocumentationPluginsBootstrapper.java:147] INFO  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Context refreshed 
2020-01-08 23:05:18.295 [main] [DocumentationPluginsBootstrapper.java:150] INFO  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s) 
2020-01-08 23:05:18.328 [main] [ApiListingReferenceScanner.java:41] INFO  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references 
2020-01-08 23:05:18.660 [main] [CachingOperationNameGenerator.java:40] INFO  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteConfigItemUsingPOST_1 
2020-01-08 23:05:18.669 [main] [CachingOperationNameGenerator.java:40] INFO  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: insertConfigItemUsingPOST_1 
2020-01-08 23:05:18.671 [main] [CachingOperationNameGenerator.java:40] INFO  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateConfigItemUsingPOST_1 
2020-01-08 23:05:18.689 [main] [DirectJDKLog.java:173] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-81"] 
2020-01-08 23:05:18.715 [main] [TomcatWebServer.java:204] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 81 (http) with context path '' 
2020-01-08 23:05:18.719 [main] [StartupInfoLogger.java:59] INFO  com.tjhnode.DataserviceApplication - Started DataserviceApplication in 8.427 seconds (JVM running for 11.598) 
2020-01-08 23:05:40.402 [http-nio-81-exec-1] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet' 
2020-01-08 23:05:40.402 [http-nio-81-exec-1] [FrameworkServlet.java:524] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet' 
2020-01-08 23:05:40.410 [http-nio-81-exec-1] [FrameworkServlet.java:546] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 8 ms 
2020-01-08 23:06:58.888 [Thread-18] [ExecutorConfigurationSupport.java:208] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor' 
2020-01-08 23:06:58.889 [Thread-18] [DynamicRoutingDataSource.java:182] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - closing dynamicDatasource  ing.... 
2020-01-08 23:06:58.898 [Thread-18] [DruidDataSource.java:1825] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closed 
2020-01-08 23:06:58.903 [Thread-18] [DruidDataSource.java:1825] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4} closed 
2020-01-08 23:06:58.908 [Thread-18] [DruidDataSource.java:1825] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed 
2020-01-08 23:06:58.913 [Thread-18] [DruidDataSource.java:1825] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3} closed 
2020-01-08 23:10:54.944 [main] [StartupInfoLogger.java:50] INFO  com.tjhnode.DataserviceApplication - Starting DataserviceApplication on tjh with PID 4500 (D:\JavaProject\dataservice\target\classes started by My in D:\JavaProject\dataservice) 
2020-01-08 23:10:54.952 [main] [SpringApplication.java:675] INFO  com.tjhnode.DataserviceApplication - No active profile set, falling back to default profiles: default 
2020-01-08 23:10:56.087 [main] [RepositoryConfigurationDelegate.java:244] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode! 
2020-01-08 23:10:56.091 [main] [RepositoryConfigurationDelegate.java:126] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode. 
2020-01-08 23:10:56.126 [main] [RepositoryConfigurationDelegate.java:182] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 22ms. Found 0 repository interfaces. 
2020-01-08 23:10:56.455 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b8a71603] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 23:10:56.508 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 23:10:56.510 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$223586d4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 23:10:56.516 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 23:10:56.524 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 23:10:56.999 [main] [TomcatWebServer.java:90] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 81 (http) 
2020-01-08 23:10:57.014 [main] [DirectJDKLog.java:173] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-81"] 
2020-01-08 23:10:57.023 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat] 
2020-01-08 23:10:57.024 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16] 
2020-01-08 23:10:57.035 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded APR based Apache Tomcat Native library [1.2.21] using APR version [1.6.5]. 
2020-01-08 23:10:57.035 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true]. 
2020-01-08 23:10:57.036 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true] 
2020-01-08 23:10:58.125 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 1.0.2q  20 Nov 2018] 
2020-01-08 23:10:58.297 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext 
2020-01-08 23:10:58.297 [main] [ServletWebServerApplicationContext.java:296] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3232 ms 
2020-01-08 23:10:58.454 [main] [DynamicDataSourceCreator.java:113] INFO  com.baomidou.dynamic.datasource.DynamicDataSourceCreator - 动态数据源-检测到druid存在,如配置中未指定type,druid会默认配置 
2020-01-08 23:11:00.385 [main] [DruidDataSource.java:930] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1,master} inited 
2020-01-08 23:11:00.463 [main] [DruidDataSource.java:930] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2,appconfig} inited 
2020-01-08 23:11:00.520 [main] [DruidDataSource.java:930] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3,applog} inited 
2020-01-08 23:11:00.596 [main] [DruidDataSource.java:930] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4,app} inited 
2020-01-08 23:11:00.597 [main] [DynamicRoutingDataSource.java:203] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 初始共加载 4 个数据源 
2020-01-08 23:11:00.597 [main] [DynamicRoutingDataSource.java:142] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 动态数据源-加载 appconfig 成功 
2020-01-08 23:11:00.597 [main] [DynamicRoutingDataSource.java:142] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 动态数据源-加载 app 成功 
2020-01-08 23:11:00.597 [main] [DynamicRoutingDataSource.java:142] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 动态数据源-加载 master 成功 
2020-01-08 23:11:00.597 [main] [DynamicRoutingDataSource.java:142] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 动态数据源-加载 applog 成功 
2020-01-08 23:11:00.598 [main] [DynamicRoutingDataSource.java:212] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 appconfig 
2020-01-08 23:11:00.872 [main] [TableInfoHelper.java:250] WARN  com.baomidou.mybatisplus.core.toolkit.TableInfoHelper - Warn: Could not find @TableId in Class: com.tjhnode.dataservice.model.entities.ClassificationModel. 
2020-01-08 23:11:00.919 [main] [TableInfoHelper.java:250] WARN  com.baomidou.mybatisplus.core.toolkit.TableInfoHelper - Warn: Could not find @TableId in Class: com.tjhnode.dataservice.model.entities.ConfigItemModel. 
2020-01-08 23:11:00.958 [main] [TableInfoHelper.java:250] WARN  com.baomidou.mybatisplus.core.toolkit.TableInfoHelper - Warn: Could not find @TableId in Class: com.tjhnode.dataservice.model.entities.Enumparameters. 
2020-01-08 23:11:01.012 [main] [TableInfoHelper.java:250] WARN  com.baomidou.mybatisplus.core.toolkit.TableInfoHelper - Warn: Could not find @TableId in Class: com.tjhnode.dataservice.model.entities.ParametersConfig. 
2020-01-08 23:11:01.042 [main] [TableInfoHelper.java:250] WARN  com.baomidou.mybatisplus.core.toolkit.TableInfoHelper - Warn: Could not find @TableId in Class: com.tjhnode.dataservice.model.entities.SqlConfigModel. 
2020-01-08 23:11:01.513 [main] [PropertySourcedRequestMappingHandlerMapping.java:69] INFO  springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)] 
2020-01-08 23:11:01.665 [main] [ExecutorConfigurationSupport.java:171] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor' 
2020-01-08 23:11:02.259 [main] [DocumentationPluginsBootstrapper.java:147] INFO  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Context refreshed 
2020-01-08 23:11:02.274 [main] [DocumentationPluginsBootstrapper.java:150] INFO  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s) 
2020-01-08 23:11:02.307 [main] [ApiListingReferenceScanner.java:41] INFO  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references 
2020-01-08 23:11:02.496 [main] [CachingOperationNameGenerator.java:40] INFO  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteConfigItemUsingPOST_1 
2020-01-08 23:11:02.506 [main] [CachingOperationNameGenerator.java:40] INFO  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: insertConfigItemUsingPOST_1 
2020-01-08 23:11:02.509 [main] [CachingOperationNameGenerator.java:40] INFO  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateConfigItemUsingPOST_1 
2020-01-08 23:11:02.527 [main] [DirectJDKLog.java:173] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-81"] 
2020-01-08 23:11:02.553 [main] [TomcatWebServer.java:204] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 81 (http) with context path '' 
2020-01-08 23:11:02.557 [main] [StartupInfoLogger.java:59] INFO  com.tjhnode.DataserviceApplication - Started DataserviceApplication in 8.211 seconds (JVM running for 11.286) 
2020-01-08 23:11:02.908 [http-nio-81-exec-1] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet' 
2020-01-08 23:11:02.909 [http-nio-81-exec-1] [FrameworkServlet.java:524] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet' 
2020-01-08 23:11:02.918 [http-nio-81-exec-1] [FrameworkServlet.java:546] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 9 ms 
2020-01-08 23:11:07.759 [http-nio-81-exec-4] [AbstractHandlerExceptionResolver.java:197] WARN  org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' not supported] 
2020-01-08 23:13:37.910 [Thread-11] [ExecutorConfigurationSupport.java:208] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor' 
2020-01-08 23:13:37.913 [Thread-11] [DynamicRoutingDataSource.java:182] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - closing dynamicDatasource  ing.... 
2020-01-08 23:13:37.925 [Thread-11] [DruidDataSource.java:1825] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closed 
2020-01-08 23:13:37.934 [Thread-11] [DruidDataSource.java:1825] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4} closed 
2020-01-08 23:13:37.941 [Thread-11] [DruidDataSource.java:1825] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed 
2020-01-08 23:13:37.951 [Thread-11] [DruidDataSource.java:1825] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3} closed 
2020-01-08 23:13:52.182 [main] [StartupInfoLogger.java:50] INFO  com.tjhnode.DataserviceApplication - Starting DataserviceApplication on tjh with PID 5480 (D:\JavaProject\dataservice\target\classes started by My in D:\JavaProject\dataservice) 
2020-01-08 23:13:52.191 [main] [SpringApplication.java:675] INFO  com.tjhnode.DataserviceApplication - No active profile set, falling back to default profiles: default 
2020-01-08 23:13:53.268 [main] [RepositoryConfigurationDelegate.java:244] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode! 
2020-01-08 23:13:53.272 [main] [RepositoryConfigurationDelegate.java:126] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode. 
2020-01-08 23:13:53.308 [main] [RepositoryConfigurationDelegate.java:182] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 22ms. Found 0 repository interfaces. 
2020-01-08 23:13:53.633 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$6b31778c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 23:13:53.686 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 23:13:53.688 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$d4bfe85d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 23:13:53.694 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 23:13:53.699 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 23:13:54.073 [main] [TomcatWebServer.java:90] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 81 (http) 
2020-01-08 23:13:54.087 [main] [DirectJDKLog.java:173] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-81"] 
2020-01-08 23:13:54.095 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat] 
2020-01-08 23:13:54.096 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16] 
2020-01-08 23:13:54.102 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded APR based Apache Tomcat Native library [1.2.21] using APR version [1.6.5]. 
2020-01-08 23:13:54.102 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true]. 
2020-01-08 23:13:54.103 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true] 
2020-01-08 23:13:55.193 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 1.0.2q  20 Nov 2018] 
2020-01-08 23:13:55.335 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext 
2020-01-08 23:13:55.335 [main] [ServletWebServerApplicationContext.java:296] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3051 ms 
2020-01-08 23:13:55.473 [main] [DynamicDataSourceCreator.java:113] INFO  com.baomidou.dynamic.datasource.DynamicDataSourceCreator - 动态数据源-检测到druid存在,如配置中未指定type,druid会默认配置 
2020-01-08 23:13:57.434 [main] [DruidDataSource.java:930] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1,master} inited 
2020-01-08 23:13:57.500 [main] [DruidDataSource.java:930] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2,appconfig} inited 
2020-01-08 23:13:57.547 [main] [DruidDataSource.java:930] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3,applog} inited 
2020-01-08 23:13:57.629 [main] [DruidDataSource.java:930] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4,app} inited 
2020-01-08 23:13:57.630 [main] [DynamicRoutingDataSource.java:203] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 初始共加载 4 个数据源 
2020-01-08 23:13:57.630 [main] [DynamicRoutingDataSource.java:142] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 动态数据源-加载 appconfig 成功 
2020-01-08 23:13:57.630 [main] [DynamicRoutingDataSource.java:142] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 动态数据源-加载 app 成功 
2020-01-08 23:13:57.630 [main] [DynamicRoutingDataSource.java:142] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 动态数据源-加载 master 成功 
2020-01-08 23:13:57.630 [main] [DynamicRoutingDataSource.java:142] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 动态数据源-加载 applog 成功 
2020-01-08 23:13:57.631 [main] [DynamicRoutingDataSource.java:212] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 appconfig 
2020-01-08 23:13:57.905 [main] [TableInfoHelper.java:250] WARN  com.baomidou.mybatisplus.core.toolkit.TableInfoHelper - Warn: Could not find @TableId in Class: com.tjhnode.dataservice.model.entities.ClassificationModel. 
2020-01-08 23:13:57.971 [main] [TableInfoHelper.java:250] WARN  com.baomidou.mybatisplus.core.toolkit.TableInfoHelper - Warn: Could not find @TableId in Class: com.tjhnode.dataservice.model.entities.ConfigItemModel. 
2020-01-08 23:13:58.005 [main] [TableInfoHelper.java:250] WARN  com.baomidou.mybatisplus.core.toolkit.TableInfoHelper - Warn: Could not find @TableId in Class: com.tjhnode.dataservice.model.entities.Enumparameters. 
2020-01-08 23:13:58.034 [main] [TableInfoHelper.java:250] WARN  com.baomidou.mybatisplus.core.toolkit.TableInfoHelper - Warn: Could not find @TableId in Class: com.tjhnode.dataservice.model.entities.ParametersConfig. 
2020-01-08 23:13:58.063 [main] [TableInfoHelper.java:250] WARN  com.baomidou.mybatisplus.core.toolkit.TableInfoHelper - Warn: Could not find @TableId in Class: com.tjhnode.dataservice.model.entities.SqlConfigModel. 
2020-01-08 23:13:58.693 [main] [PropertySourcedRequestMappingHandlerMapping.java:69] INFO  springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)] 
2020-01-08 23:13:58.865 [main] [ExecutorConfigurationSupport.java:171] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor' 
2020-01-08 23:13:59.530 [main] [DocumentationPluginsBootstrapper.java:147] INFO  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Context refreshed 
2020-01-08 23:13:59.546 [main] [DocumentationPluginsBootstrapper.java:150] INFO  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s) 
2020-01-08 23:13:59.589 [main] [ApiListingReferenceScanner.java:41] INFO  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references 
2020-01-08 23:13:59.804 [main] [CachingOperationNameGenerator.java:40] INFO  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteConfigItemUsingPOST_1 
2020-01-08 23:13:59.822 [main] [CachingOperationNameGenerator.java:40] INFO  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: insertConfigItemUsingPOST_1 
2020-01-08 23:13:59.828 [main] [CachingOperationNameGenerator.java:40] INFO  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateConfigItemUsingPOST_1 
2020-01-08 23:13:59.850 [main] [DirectJDKLog.java:173] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-81"] 
2020-01-08 23:13:59.883 [main] [TomcatWebServer.java:204] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 81 (http) with context path '' 
2020-01-08 23:13:59.886 [main] [StartupInfoLogger.java:59] INFO  com.tjhnode.DataserviceApplication - Started DataserviceApplication in 8.343 seconds (JVM running for 12.134) 
2020-01-08 23:15:02.558 [Thread-16] [ExecutorConfigurationSupport.java:208] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor' 
2020-01-08 23:15:02.560 [Thread-16] [DynamicRoutingDataSource.java:182] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - closing dynamicDatasource  ing.... 
2020-01-08 23:15:02.575 [Thread-16] [DruidDataSource.java:1825] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closed 
2020-01-08 23:15:02.581 [Thread-16] [DruidDataSource.java:1825] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4} closed 
2020-01-08 23:15:02.589 [Thread-16] [DruidDataSource.java:1825] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed 
2020-01-08 23:15:02.598 [Thread-16] [DruidDataSource.java:1825] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3} closed 
2020-01-08 23:15:15.165 [main] [StartupInfoLogger.java:50] INFO  com.tjhnode.DataserviceApplication - Starting DataserviceApplication on tjh with PID 5652 (D:\JavaProject\dataservice\target\classes started by My in D:\JavaProject\dataservice) 
2020-01-08 23:15:15.172 [main] [SpringApplication.java:675] INFO  com.tjhnode.DataserviceApplication - No active profile set, falling back to default profiles: default 
2020-01-08 23:15:16.300 [main] [RepositoryConfigurationDelegate.java:244] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode! 
2020-01-08 23:15:16.304 [main] [RepositoryConfigurationDelegate.java:126] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode. 
2020-01-08 23:15:16.341 [main] [RepositoryConfigurationDelegate.java:182] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 23ms. Found 0 repository interfaces. 
2020-01-08 23:15:16.674 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$88ee2343] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 23:15:16.725 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 23:15:16.728 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$f27c9414] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 23:15:16.733 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 23:15:16.738 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 23:15:17.128 [main] [TomcatWebServer.java:90] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 81 (http) 
2020-01-08 23:15:17.141 [main] [DirectJDKLog.java:173] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-81"] 
2020-01-08 23:15:17.149 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat] 
2020-01-08 23:15:17.150 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16] 
2020-01-08 23:15:17.156 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded APR based Apache Tomcat Native library [1.2.21] using APR version [1.6.5]. 
2020-01-08 23:15:17.157 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true]. 
2020-01-08 23:15:17.157 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true] 
2020-01-08 23:15:18.256 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 1.0.2q  20 Nov 2018] 
2020-01-08 23:15:18.401 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext 
2020-01-08 23:15:18.402 [main] [ServletWebServerApplicationContext.java:296] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3117 ms 
2020-01-08 23:15:18.544 [main] [DynamicDataSourceCreator.java:113] INFO  com.baomidou.dynamic.datasource.DynamicDataSourceCreator - 动态数据源-检测到druid存在,如配置中未指定type,druid会默认配置 
2020-01-08 23:15:20.381 [main] [DruidDataSource.java:930] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1,master} inited 
2020-01-08 23:15:20.470 [main] [DruidDataSource.java:930] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2,appconfig} inited 
2020-01-08 23:15:20.533 [main] [DruidDataSource.java:930] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3,applog} inited 
2020-01-08 23:15:20.586 [main] [DruidDataSource.java:930] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4,app} inited 
2020-01-08 23:15:20.586 [main] [DynamicRoutingDataSource.java:203] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 初始共加载 4 个数据源 
2020-01-08 23:15:20.587 [main] [DynamicRoutingDataSource.java:142] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 动态数据源-加载 appconfig 成功 
2020-01-08 23:15:20.587 [main] [DynamicRoutingDataSource.java:142] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 动态数据源-加载 app 成功 
2020-01-08 23:15:20.587 [main] [DynamicRoutingDataSource.java:142] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 动态数据源-加载 master 成功 
2020-01-08 23:15:20.588 [main] [DynamicRoutingDataSource.java:142] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 动态数据源-加载 applog 成功 
2020-01-08 23:15:20.588 [main] [DynamicRoutingDataSource.java:212] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 appconfig 
2020-01-08 23:15:20.901 [main] [TableInfoHelper.java:250] WARN  com.baomidou.mybatisplus.core.toolkit.TableInfoHelper - Warn: Could not find @TableId in Class: com.tjhnode.dataservice.model.entities.ClassificationModel. 
2020-01-08 23:15:20.951 [main] [TableInfoHelper.java:250] WARN  com.baomidou.mybatisplus.core.toolkit.TableInfoHelper - Warn: Could not find @TableId in Class: com.tjhnode.dataservice.model.entities.ConfigItemModel. 
2020-01-08 23:15:20.985 [main] [TableInfoHelper.java:250] WARN  com.baomidou.mybatisplus.core.toolkit.TableInfoHelper - Warn: Could not find @TableId in Class: com.tjhnode.dataservice.model.entities.Enumparameters. 
2020-01-08 23:15:21.014 [main] [TableInfoHelper.java:250] WARN  com.baomidou.mybatisplus.core.toolkit.TableInfoHelper - Warn: Could not find @TableId in Class: com.tjhnode.dataservice.model.entities.ParametersConfig. 
2020-01-08 23:15:21.047 [main] [TableInfoHelper.java:250] WARN  com.baomidou.mybatisplus.core.toolkit.TableInfoHelper - Warn: Could not find @TableId in Class: com.tjhnode.dataservice.model.entities.SqlConfigModel. 
2020-01-08 23:15:21.529 [main] [PropertySourcedRequestMappingHandlerMapping.java:69] INFO  springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)] 
2020-01-08 23:15:21.685 [main] [ExecutorConfigurationSupport.java:171] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor' 
2020-01-08 23:15:22.307 [main] [DocumentationPluginsBootstrapper.java:147] INFO  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Context refreshed 
2020-01-08 23:15:22.323 [main] [DocumentationPluginsBootstrapper.java:150] INFO  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s) 
2020-01-08 23:15:22.356 [main] [ApiListingReferenceScanner.java:41] INFO  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references 
2020-01-08 23:15:22.540 [main] [CachingOperationNameGenerator.java:40] INFO  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteConfigItemUsingPOST_1 
2020-01-08 23:15:22.549 [main] [CachingOperationNameGenerator.java:40] INFO  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: insertConfigItemUsingPOST_1 
2020-01-08 23:15:22.551 [main] [CachingOperationNameGenerator.java:40] INFO  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateConfigItemUsingPOST_1 
2020-01-08 23:15:22.570 [main] [DirectJDKLog.java:173] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-81"] 
2020-01-08 23:15:22.598 [main] [TomcatWebServer.java:204] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 81 (http) with context path '' 
2020-01-08 23:15:22.602 [main] [StartupInfoLogger.java:59] INFO  com.tjhnode.DataserviceApplication - Started DataserviceApplication in 7.912 seconds (JVM running for 11.18) 
2020-01-08 23:15:47.890 [http-nio-81-exec-1] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet' 
2020-01-08 23:15:47.890 [http-nio-81-exec-1] [FrameworkServlet.java:524] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet' 
2020-01-08 23:15:47.898 [http-nio-81-exec-1] [FrameworkServlet.java:546] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 8 ms 
2020-01-08 23:23:24.133 [Thread-17] [ExecutorConfigurationSupport.java:208] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor' 
2020-01-08 23:23:24.136 [Thread-17] [DynamicRoutingDataSource.java:182] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - closing dynamicDatasource  ing.... 
2020-01-08 23:23:24.144 [Thread-17] [DruidDataSource.java:1825] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closed 
2020-01-08 23:23:24.153 [Thread-17] [DruidDataSource.java:1825] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4} closed 
2020-01-08 23:23:24.160 [Thread-17] [DruidDataSource.java:1825] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed 
2020-01-08 23:23:24.170 [Thread-17] [DruidDataSource.java:1825] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3} closed 
2020-01-08 23:23:48.465 [main] [StartupInfoLogger.java:50] INFO  com.tjhnode.DataserviceApplication - Starting DataserviceApplication on tjh with PID 11704 (D:\JavaProject\dataservice\target\classes started by My in D:\JavaProject\dataservice) 
2020-01-08 23:23:48.475 [main] [SpringApplication.java:675] INFO  com.tjhnode.DataserviceApplication - No active profile set, falling back to default profiles: default 
2020-01-08 23:23:49.600 [main] [RepositoryConfigurationDelegate.java:244] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode! 
2020-01-08 23:23:49.603 [main] [RepositoryConfigurationDelegate.java:126] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode. 
2020-01-08 23:23:49.639 [main] [RepositoryConfigurationDelegate.java:182] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 22ms. Found 0 repository interfaces. 
2020-01-08 23:23:49.947 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$576d1462] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 23:23:49.998 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 23:23:50.000 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$c0fb8533] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 23:23:50.006 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 23:23:50.013 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 23:23:50.383 [main] [TomcatWebServer.java:90] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 81 (http) 
2020-01-08 23:23:50.396 [main] [DirectJDKLog.java:173] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-81"] 
2020-01-08 23:23:50.404 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat] 
2020-01-08 23:23:50.405 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16] 
2020-01-08 23:23:50.412 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded APR based Apache Tomcat Native library [1.2.21] using APR version [1.6.5]. 
2020-01-08 23:23:50.412 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true]. 
2020-01-08 23:23:50.412 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true] 
2020-01-08 23:23:51.514 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 1.0.2q  20 Nov 2018] 
2020-01-08 23:23:51.653 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext 
2020-01-08 23:23:51.653 [main] [ServletWebServerApplicationContext.java:296] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3062 ms 
2020-01-08 23:23:51.806 [main] [DynamicDataSourceCreator.java:113] INFO  com.baomidou.dynamic.datasource.DynamicDataSourceCreator - 动态数据源-检测到druid存在,如配置中未指定type,druid会默认配置 
2020-01-08 23:23:53.807 [main] [DruidDataSource.java:930] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1,master} inited 
2020-01-08 23:23:53.871 [main] [DruidDataSource.java:930] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2,appconfig} inited 
2020-01-08 23:23:53.935 [main] [DruidDataSource.java:930] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3,applog} inited 
2020-01-08 23:23:53.996 [main] [DruidDataSource.java:930] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4,app} inited 
2020-01-08 23:23:53.997 [main] [DynamicRoutingDataSource.java:203] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 初始共加载 4 个数据源 
2020-01-08 23:23:53.997 [main] [DynamicRoutingDataSource.java:142] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 动态数据源-加载 appconfig 成功 
2020-01-08 23:23:53.997 [main] [DynamicRoutingDataSource.java:142] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 动态数据源-加载 app 成功 
2020-01-08 23:23:53.997 [main] [DynamicRoutingDataSource.java:142] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 动态数据源-加载 master 成功 
2020-01-08 23:23:53.997 [main] [DynamicRoutingDataSource.java:142] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 动态数据源-加载 applog 成功 
2020-01-08 23:23:53.997 [main] [DynamicRoutingDataSource.java:212] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 appconfig 
2020-01-08 23:23:54.271 [main] [TableInfoHelper.java:250] WARN  com.baomidou.mybatisplus.core.toolkit.TableInfoHelper - Warn: Could not find @TableId in Class: com.tjhnode.dataservice.model.entities.ClassificationModel. 
2020-01-08 23:23:54.319 [main] [TableInfoHelper.java:250] WARN  com.baomidou.mybatisplus.core.toolkit.TableInfoHelper - Warn: Could not find @TableId in Class: com.tjhnode.dataservice.model.entities.ConfigItemModel. 
2020-01-08 23:23:54.359 [main] [TableInfoHelper.java:250] WARN  com.baomidou.mybatisplus.core.toolkit.TableInfoHelper - Warn: Could not find @TableId in Class: com.tjhnode.dataservice.model.entities.Enumparameters. 
2020-01-08 23:23:54.413 [main] [TableInfoHelper.java:250] WARN  com.baomidou.mybatisplus.core.toolkit.TableInfoHelper - Warn: Could not find @TableId in Class: com.tjhnode.dataservice.model.entities.ParametersConfig. 
2020-01-08 23:23:54.442 [main] [TableInfoHelper.java:250] WARN  com.baomidou.mybatisplus.core.toolkit.TableInfoHelper - Warn: Could not find @TableId in Class: com.tjhnode.dataservice.model.entities.SqlConfigModel. 
2020-01-08 23:23:54.934 [main] [PropertySourcedRequestMappingHandlerMapping.java:69] INFO  springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)] 
2020-01-08 23:23:55.089 [main] [ExecutorConfigurationSupport.java:171] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor' 
2020-01-08 23:23:55.701 [main] [DocumentationPluginsBootstrapper.java:147] INFO  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Context refreshed 
2020-01-08 23:23:55.716 [main] [DocumentationPluginsBootstrapper.java:150] INFO  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s) 
2020-01-08 23:23:55.750 [main] [ApiListingReferenceScanner.java:41] INFO  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references 
2020-01-08 23:23:55.978 [main] [CachingOperationNameGenerator.java:40] INFO  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteConfigItemUsingPOST_1 
2020-01-08 23:23:55.989 [main] [CachingOperationNameGenerator.java:40] INFO  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: insertConfigItemUsingPOST_1 
2020-01-08 23:23:55.991 [main] [CachingOperationNameGenerator.java:40] INFO  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateConfigItemUsingPOST_1 
2020-01-08 23:23:56.009 [main] [DirectJDKLog.java:173] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-81"] 
2020-01-08 23:23:56.034 [main] [TomcatWebServer.java:204] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 81 (http) with context path '' 
2020-01-08 23:23:56.037 [main] [StartupInfoLogger.java:59] INFO  com.tjhnode.DataserviceApplication - Started DataserviceApplication in 8.056 seconds (JVM running for 11.049) 
2020-01-08 23:24:05.598 [http-nio-81-exec-1] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet' 
2020-01-08 23:24:05.599 [http-nio-81-exec-1] [FrameworkServlet.java:524] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet' 
2020-01-08 23:24:05.607 [http-nio-81-exec-1] [FrameworkServlet.java:546] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 8 ms 
2020-01-08 23:24:25.573 [http-nio-81-exec-1] [DirectJDKLog.java:175] ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause 
java.lang.NullPointerException: null
	at com.tjhnode.common.utils.AttributeUtils.getType(AttributeUtils.java:16) ~[classes/:?]
	at com.tjhnode.common.vo.JSONResult.<init>(JSONResult.java:43) ~[classes/:?]
	at com.tjhnode.dataservice.controller.ConfigItemController.getConfigItemDetail(ConfigItemController.java:78) ~[classes/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_131]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_131]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_131]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_131]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:189) ~[spring-web-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138) ~[spring-web-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102) ~[spring-webmvc-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895) ~[spring-webmvc-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800) ~[spring-webmvc-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038) ~[spring-webmvc-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942) ~[spring-webmvc-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005) ~[spring-webmvc-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897) ~[spring-webmvc-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634) ~[tomcat-embed-core-9.0.16.jar:9.0.16]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882) ~[spring-webmvc-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) ~[tomcat-embed-core-9.0.16.jar:9.0.16]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-9.0.16.jar:9.0.16]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.16.jar:9.0.16]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.16.jar:9.0.16]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.16.jar:9.0.16]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.16.jar:9.0.16]
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:96) ~[spring-web-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.16.jar:9.0.16]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.16.jar:9.0.16]
	at com.github.xiaoymin.swaggerbootstrapui.filter.SecurityBasicAuthFilter.doFilter(SecurityBasicAuthFilter.java:84) ~[swagger-bootstrap-ui-1.9.3.jar:?]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.16.jar:9.0.16]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.16.jar:9.0.16]
	at com.github.xiaoymin.swaggerbootstrapui.filter.ProductionSecurityFilter.doFilter(ProductionSecurityFilter.java:53) ~[swagger-bootstrap-ui-1.9.3.jar:?]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.16.jar:9.0.16]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.16.jar:9.0.16]
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123) ~[druid-1.1.10.jar:1.1.10]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.16.jar:9.0.16]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.16.jar:9.0.16]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99) ~[spring-web-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.16.jar:9.0.16]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.16.jar:9.0.16]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92) ~[spring-web-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.16.jar:9.0.16]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.16.jar:9.0.16]
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93) ~[spring-web-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.16.jar:9.0.16]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.16.jar:9.0.16]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200) ~[spring-web-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-5.1.5.RELEASE.jar:5.1.5.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.16.jar:9.0.16]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.16.jar:9.0.16]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200) [tomcat-embed-core-9.0.16.jar:9.0.16]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.16.jar:9.0.16]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490) [tomcat-embed-core-9.0.16.jar:9.0.16]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.16.jar:9.0.16]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.16.jar:9.0.16]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.16.jar:9.0.16]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.16.jar:9.0.16]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408) [tomcat-embed-core-9.0.16.jar:9.0.16]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-9.0.16.jar:9.0.16]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834) [tomcat-embed-core-9.0.16.jar:9.0.16]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415) [tomcat-embed-core-9.0.16.jar:9.0.16]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.16.jar:9.0.16]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_131]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_131]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.16.jar:9.0.16]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_131]
2020-01-08 23:24:38.535 [Thread-14] [ExecutorConfigurationSupport.java:208] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor' 
2020-01-08 23:24:38.538 [Thread-14] [DynamicRoutingDataSource.java:182] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - closing dynamicDatasource  ing.... 
2020-01-08 23:24:38.546 [Thread-14] [DruidDataSource.java:1825] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closed 
2020-01-08 23:24:38.551 [Thread-14] [DruidDataSource.java:1825] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4} closed 
2020-01-08 23:24:38.555 [Thread-14] [DruidDataSource.java:1825] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed 
2020-01-08 23:24:38.561 [Thread-14] [DruidDataSource.java:1825] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3} closed 
2020-01-08 23:25:09.799 [main] [StartupInfoLogger.java:50] INFO  com.tjhnode.DataserviceApplication - Starting DataserviceApplication on tjh with PID 12128 (D:\JavaProject\dataservice\target\classes started by My in D:\JavaProject\dataservice) 
2020-01-08 23:25:09.809 [main] [SpringApplication.java:675] INFO  com.tjhnode.DataserviceApplication - No active profile set, falling back to default profiles: default 
2020-01-08 23:25:10.895 [main] [RepositoryConfigurationDelegate.java:244] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode! 
2020-01-08 23:25:10.900 [main] [RepositoryConfigurationDelegate.java:126] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode. 
2020-01-08 23:25:10.939 [main] [RepositoryConfigurationDelegate.java:182] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 25ms. Found 0 repository interfaces. 
2020-01-08 23:25:11.260 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d2d5375] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 23:25:11.322 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 23:25:11.325 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$76bbc446] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 23:25:11.330 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 23:25:11.335 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 23:25:11.714 [main] [TomcatWebServer.java:90] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 81 (http) 
2020-01-08 23:25:11.728 [main] [DirectJDKLog.java:173] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-81"] 
2020-01-08 23:25:11.735 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat] 
2020-01-08 23:25:11.736 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16] 
2020-01-08 23:25:11.743 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded APR based Apache Tomcat Native library [1.2.21] using APR version [1.6.5]. 
2020-01-08 23:25:11.743 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true]. 
2020-01-08 23:25:11.744 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true] 
2020-01-08 23:25:12.809 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 1.0.2q  20 Nov 2018] 
2020-01-08 23:25:12.949 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext 
2020-01-08 23:25:12.949 [main] [ServletWebServerApplicationContext.java:296] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3035 ms 
2020-01-08 23:25:13.093 [main] [DynamicDataSourceCreator.java:113] INFO  com.baomidou.dynamic.datasource.DynamicDataSourceCreator - 动态数据源-检测到druid存在,如配置中未指定type,druid会默认配置 
2020-01-08 23:25:14.952 [main] [DruidDataSource.java:930] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1,master} inited 
2020-01-08 23:25:15.026 [main] [DruidDataSource.java:930] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2,appconfig} inited 
2020-01-08 23:25:15.097 [main] [DruidDataSource.java:930] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3,applog} inited 
2020-01-08 23:25:15.162 [main] [DruidDataSource.java:930] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4,app} inited 
2020-01-08 23:25:15.163 [main] [DynamicRoutingDataSource.java:203] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 初始共加载 4 个数据源 
2020-01-08 23:25:15.163 [main] [DynamicRoutingDataSource.java:142] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 动态数据源-加载 appconfig 成功 
2020-01-08 23:25:15.163 [main] [DynamicRoutingDataSource.java:142] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 动态数据源-加载 app 成功 
2020-01-08 23:25:15.164 [main] [DynamicRoutingDataSource.java:142] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 动态数据源-加载 master 成功 
2020-01-08 23:25:15.164 [main] [DynamicRoutingDataSource.java:142] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 动态数据源-加载 applog 成功 
2020-01-08 23:25:15.164 [main] [DynamicRoutingDataSource.java:212] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 appconfig 
2020-01-08 23:25:15.498 [main] [TableInfoHelper.java:250] WARN  com.baomidou.mybatisplus.core.toolkit.TableInfoHelper - Warn: Could not find @TableId in Class: com.tjhnode.dataservice.model.entities.ClassificationModel. 
2020-01-08 23:25:15.546 [main] [TableInfoHelper.java:250] WARN  com.baomidou.mybatisplus.core.toolkit.TableInfoHelper - Warn: Could not find @TableId in Class: com.tjhnode.dataservice.model.entities.ConfigItemModel. 
2020-01-08 23:25:15.584 [main] [TableInfoHelper.java:250] WARN  com.baomidou.mybatisplus.core.toolkit.TableInfoHelper - Warn: Could not find @TableId in Class: com.tjhnode.dataservice.model.entities.Enumparameters. 
2020-01-08 23:25:15.615 [main] [TableInfoHelper.java:250] WARN  com.baomidou.mybatisplus.core.toolkit.TableInfoHelper - Warn: Could not find @TableId in Class: com.tjhnode.dataservice.model.entities.ParametersConfig. 
2020-01-08 23:25:15.644 [main] [TableInfoHelper.java:250] WARN  com.baomidou.mybatisplus.core.toolkit.TableInfoHelper - Warn: Could not find @TableId in Class: com.tjhnode.dataservice.model.entities.SqlConfigModel. 
2020-01-08 23:25:16.249 [main] [PropertySourcedRequestMappingHandlerMapping.java:69] INFO  springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)] 
2020-01-08 23:25:16.466 [main] [ExecutorConfigurationSupport.java:171] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor' 
2020-01-08 23:25:17.364 [main] [DocumentationPluginsBootstrapper.java:147] INFO  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Context refreshed 
2020-01-08 23:25:17.387 [main] [DocumentationPluginsBootstrapper.java:150] INFO  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s) 
2020-01-08 23:25:17.424 [main] [ApiListingReferenceScanner.java:41] INFO  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references 
2020-01-08 23:25:17.708 [main] [CachingOperationNameGenerator.java:40] INFO  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteConfigItemUsingPOST_1 
2020-01-08 23:25:17.725 [main] [CachingOperationNameGenerator.java:40] INFO  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: insertConfigItemUsingPOST_1 
2020-01-08 23:25:17.728 [main] [CachingOperationNameGenerator.java:40] INFO  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateConfigItemUsingPOST_1 
2020-01-08 23:25:17.748 [main] [DirectJDKLog.java:173] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-81"] 
2020-01-08 23:25:17.777 [main] [TomcatWebServer.java:204] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 81 (http) with context path '' 
2020-01-08 23:25:17.781 [main] [StartupInfoLogger.java:59] INFO  com.tjhnode.DataserviceApplication - Started DataserviceApplication in 8.451 seconds (JVM running for 11.514) 
2020-01-08 23:25:21.515 [http-nio-81-exec-1] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet' 
2020-01-08 23:25:21.515 [http-nio-81-exec-1] [FrameworkServlet.java:524] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet' 
2020-01-08 23:25:21.525 [http-nio-81-exec-1] [FrameworkServlet.java:546] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 10 ms 
2020-01-08 23:27:57.998 [Thread-15] [ExecutorConfigurationSupport.java:208] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor' 
2020-01-08 23:27:58.000 [Thread-15] [DynamicRoutingDataSource.java:182] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - closing dynamicDatasource  ing.... 
2020-01-08 23:27:58.010 [Thread-15] [DruidDataSource.java:1825] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closed 
2020-01-08 23:27:58.022 [Thread-15] [DruidDataSource.java:1825] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4} closed 
2020-01-08 23:27:58.030 [Thread-15] [DruidDataSource.java:1825] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed 
2020-01-08 23:27:58.036 [Thread-15] [DruidDataSource.java:1825] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3} closed 
2020-01-08 23:28:06.878 [main] [StartupInfoLogger.java:50] INFO  com.tjhnode.DataserviceApplication - Starting DataserviceApplication on tjh with PID 5588 (D:\JavaProject\dataservice\target\classes started by My in D:\JavaProject\dataservice) 
2020-01-08 23:28:06.888 [main] [SpringApplication.java:675] INFO  com.tjhnode.DataserviceApplication - No active profile set, falling back to default profiles: default 
2020-01-08 23:28:08.185 [main] [RepositoryConfigurationDelegate.java:244] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode! 
2020-01-08 23:28:08.189 [main] [RepositoryConfigurationDelegate.java:126] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode. 
2020-01-08 23:28:08.228 [main] [RepositoryConfigurationDelegate.java:182] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 24ms. Found 0 repository interfaces. 
2020-01-08 23:28:08.583 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$91fec3a9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 23:28:08.646 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 23:28:08.649 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$fb8d347a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 23:28:08.655 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 23:28:08.661 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 23:28:09.127 [main] [TomcatWebServer.java:90] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 81 (http) 
2020-01-08 23:28:09.144 [main] [DirectJDKLog.java:173] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-81"] 
2020-01-08 23:28:09.152 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat] 
2020-01-08 23:28:09.153 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16] 
2020-01-08 23:28:09.160 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded APR based Apache Tomcat Native library [1.2.21] using APR version [1.6.5]. 
2020-01-08 23:28:09.161 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true]. 
2020-01-08 23:28:09.161 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true] 
2020-01-08 23:28:10.265 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 1.0.2q  20 Nov 2018] 
2020-01-08 23:28:10.460 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext 
2020-01-08 23:28:10.463 [main] [ServletWebServerApplicationContext.java:296] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3471 ms 
2020-01-08 23:28:10.669 [main] [DynamicDataSourceCreator.java:113] INFO  com.baomidou.dynamic.datasource.DynamicDataSourceCreator - 动态数据源-检测到druid存在,如配置中未指定type,druid会默认配置 
2020-01-08 23:28:12.765 [main] [DruidDataSource.java:930] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1,master} inited 
2020-01-08 23:28:12.845 [main] [DruidDataSource.java:930] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2,appconfig} inited 
2020-01-08 23:28:12.905 [main] [DruidDataSource.java:930] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3,applog} inited 
2020-01-08 23:28:12.990 [main] [DruidDataSource.java:930] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4,app} inited 
2020-01-08 23:28:12.991 [main] [DynamicRoutingDataSource.java:203] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 初始共加载 4 个数据源 
2020-01-08 23:28:12.992 [main] [DynamicRoutingDataSource.java:142] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 动态数据源-加载 appconfig 成功 
2020-01-08 23:28:12.993 [main] [DynamicRoutingDataSource.java:142] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 动态数据源-加载 app 成功 
2020-01-08 23:28:12.994 [main] [DynamicRoutingDataSource.java:142] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 动态数据源-加载 master 成功 
2020-01-08 23:28:12.994 [main] [DynamicRoutingDataSource.java:142] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 动态数据源-加载 applog 成功 
2020-01-08 23:28:12.995 [main] [DynamicRoutingDataSource.java:212] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 appconfig 
2020-01-08 23:28:13.298 [main] [TableInfoHelper.java:250] WARN  com.baomidou.mybatisplus.core.toolkit.TableInfoHelper - Warn: Could not find @TableId in Class: com.tjhnode.dataservice.model.entities.ClassificationModel. 
2020-01-08 23:28:13.363 [main] [TableInfoHelper.java:250] WARN  com.baomidou.mybatisplus.core.toolkit.TableInfoHelper - Warn: Could not find @TableId in Class: com.tjhnode.dataservice.model.entities.ConfigItemModel. 
2020-01-08 23:28:13.396 [main] [TableInfoHelper.java:250] WARN  com.baomidou.mybatisplus.core.toolkit.TableInfoHelper - Warn: Could not find @TableId in Class: com.tjhnode.dataservice.model.entities.Enumparameters. 
2020-01-08 23:28:13.424 [main] [TableInfoHelper.java:250] WARN  com.baomidou.mybatisplus.core.toolkit.TableInfoHelper - Warn: Could not find @TableId in Class: com.tjhnode.dataservice.model.entities.ParametersConfig. 
2020-01-08 23:28:13.452 [main] [TableInfoHelper.java:250] WARN  com.baomidou.mybatisplus.core.toolkit.TableInfoHelper - Warn: Could not find @TableId in Class: com.tjhnode.dataservice.model.entities.SqlConfigModel. 
2020-01-08 23:28:13.950 [main] [PropertySourcedRequestMappingHandlerMapping.java:69] INFO  springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)] 
2020-01-08 23:28:14.100 [main] [ExecutorConfigurationSupport.java:171] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor' 
2020-01-08 23:28:14.711 [main] [DocumentationPluginsBootstrapper.java:147] INFO  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Context refreshed 
2020-01-08 23:28:14.725 [main] [DocumentationPluginsBootstrapper.java:150] INFO  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s) 
2020-01-08 23:28:14.758 [main] [ApiListingReferenceScanner.java:41] INFO  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references 
2020-01-08 23:28:14.942 [main] [CachingOperationNameGenerator.java:40] INFO  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteConfigItemUsingPOST_1 
2020-01-08 23:28:14.952 [main] [CachingOperationNameGenerator.java:40] INFO  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: insertConfigItemUsingPOST_1 
2020-01-08 23:28:14.954 [main] [CachingOperationNameGenerator.java:40] INFO  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateConfigItemUsingPOST_1 
2020-01-08 23:28:14.971 [main] [DirectJDKLog.java:173] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-81"] 
2020-01-08 23:28:14.997 [main] [TomcatWebServer.java:204] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 81 (http) with context path '' 
2020-01-08 23:28:15.000 [main] [StartupInfoLogger.java:59] INFO  com.tjhnode.DataserviceApplication - Started DataserviceApplication in 8.613 seconds (JVM running for 11.579) 
2020-01-08 23:28:33.341 [http-nio-81-exec-2] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet' 
2020-01-08 23:28:33.341 [http-nio-81-exec-2] [FrameworkServlet.java:524] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet' 
2020-01-08 23:28:33.351 [http-nio-81-exec-2] [FrameworkServlet.java:546] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 10 ms 
2020-01-08 23:30:23.545 [Thread-13] [ExecutorConfigurationSupport.java:208] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor' 
2020-01-08 23:30:23.548 [Thread-13] [DynamicRoutingDataSource.java:182] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - closing dynamicDatasource  ing.... 
2020-01-08 23:30:23.561 [Thread-13] [DruidDataSource.java:1825] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closed 
2020-01-08 23:30:23.572 [Thread-13] [DruidDataSource.java:1825] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4} closed 
2020-01-08 23:30:23.581 [Thread-13] [DruidDataSource.java:1825] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed 
2020-01-08 23:30:23.591 [Thread-13] [DruidDataSource.java:1825] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3} closed 
2020-01-08 23:30:33.012 [main] [StartupInfoLogger.java:50] INFO  com.tjhnode.DataserviceApplication - Starting DataserviceApplication on tjh with PID 12192 (D:\JavaProject\dataservice\target\classes started by My in D:\JavaProject\dataservice) 
2020-01-08 23:30:33.024 [main] [SpringApplication.java:675] INFO  com.tjhnode.DataserviceApplication - No active profile set, falling back to default profiles: default 
2020-01-08 23:30:34.209 [main] [RepositoryConfigurationDelegate.java:244] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode! 
2020-01-08 23:30:34.214 [main] [RepositoryConfigurationDelegate.java:126] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode. 
2020-01-08 23:30:34.255 [main] [RepositoryConfigurationDelegate.java:182] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 25ms. Found 0 repository interfaces. 
2020-01-08 23:30:34.633 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$6a746e87] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 23:30:34.688 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 23:30:34.691 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$d402df58] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 23:30:34.697 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 23:30:34.702 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 23:30:35.155 [main] [TomcatWebServer.java:90] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 81 (http) 
2020-01-08 23:30:35.173 [main] [DirectJDKLog.java:173] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-81"] 
2020-01-08 23:30:35.186 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat] 
2020-01-08 23:30:35.187 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16] 
2020-01-08 23:30:35.194 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded APR based Apache Tomcat Native library [1.2.21] using APR version [1.6.5]. 
2020-01-08 23:30:35.195 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true]. 
2020-01-08 23:30:35.195 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true] 
2020-01-08 23:30:36.279 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 1.0.2q  20 Nov 2018] 
2020-01-08 23:30:36.482 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext 
2020-01-08 23:30:36.483 [main] [ServletWebServerApplicationContext.java:296] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3357 ms 
2020-01-08 23:30:36.726 [main] [DynamicDataSourceCreator.java:113] INFO  com.baomidou.dynamic.datasource.DynamicDataSourceCreator - 动态数据源-检测到druid存在,如配置中未指定type,druid会默认配置 
2020-01-08 23:30:38.840 [main] [DruidDataSource.java:930] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1,master} inited 
2020-01-08 23:30:38.908 [main] [DruidDataSource.java:930] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2,appconfig} inited 
2020-01-08 23:30:38.989 [main] [DruidDataSource.java:930] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3,applog} inited 
2020-01-08 23:30:39.052 [main] [DruidDataSource.java:930] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4,app} inited 
2020-01-08 23:30:39.053 [main] [DynamicRoutingDataSource.java:203] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 初始共加载 4 个数据源 
2020-01-08 23:30:39.054 [main] [DynamicRoutingDataSource.java:142] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 动态数据源-加载 appconfig 成功 
2020-01-08 23:30:39.054 [main] [DynamicRoutingDataSource.java:142] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 动态数据源-加载 app 成功 
2020-01-08 23:30:39.055 [main] [DynamicRoutingDataSource.java:142] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 动态数据源-加载 master 成功 
2020-01-08 23:30:39.055 [main] [DynamicRoutingDataSource.java:142] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 动态数据源-加载 applog 成功 
2020-01-08 23:30:39.055 [main] [DynamicRoutingDataSource.java:212] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 appconfig 
2020-01-08 23:30:39.393 [main] [TableInfoHelper.java:250] WARN  com.baomidou.mybatisplus.core.toolkit.TableInfoHelper - Warn: Could not find @TableId in Class: com.tjhnode.dataservice.model.entities.ClassificationModel. 
2020-01-08 23:30:39.461 [main] [TableInfoHelper.java:250] WARN  com.baomidou.mybatisplus.core.toolkit.TableInfoHelper - Warn: Could not find @TableId in Class: com.tjhnode.dataservice.model.entities.ConfigItemModel. 
2020-01-08 23:30:39.500 [main] [TableInfoHelper.java:250] WARN  com.baomidou.mybatisplus.core.toolkit.TableInfoHelper - Warn: Could not find @TableId in Class: com.tjhnode.dataservice.model.entities.Enumparameters. 
2020-01-08 23:30:39.532 [main] [TableInfoHelper.java:250] WARN  com.baomidou.mybatisplus.core.toolkit.TableInfoHelper - Warn: Could not find @TableId in Class: com.tjhnode.dataservice.model.entities.ParametersConfig. 
2020-01-08 23:30:39.565 [main] [TableInfoHelper.java:250] WARN  com.baomidou.mybatisplus.core.toolkit.TableInfoHelper - Warn: Could not find @TableId in Class: com.tjhnode.dataservice.model.entities.SqlConfigModel. 
2020-01-08 23:30:40.138 [main] [PropertySourcedRequestMappingHandlerMapping.java:69] INFO  springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)] 
2020-01-08 23:30:40.306 [main] [ExecutorConfigurationSupport.java:171] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor' 
2020-01-08 23:30:40.988 [main] [DocumentationPluginsBootstrapper.java:147] INFO  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Context refreshed 
2020-01-08 23:30:41.003 [main] [DocumentationPluginsBootstrapper.java:150] INFO  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s) 
2020-01-08 23:30:41.039 [main] [ApiListingReferenceScanner.java:41] INFO  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references 
2020-01-08 23:30:41.245 [main] [CachingOperationNameGenerator.java:40] INFO  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteConfigItemUsingPOST_1 
2020-01-08 23:30:41.256 [main] [CachingOperationNameGenerator.java:40] INFO  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: insertConfigItemUsingPOST_1 
2020-01-08 23:30:41.258 [main] [CachingOperationNameGenerator.java:40] INFO  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateConfigItemUsingPOST_1 
2020-01-08 23:30:41.277 [main] [DirectJDKLog.java:173] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-81"] 
2020-01-08 23:30:41.315 [main] [TomcatWebServer.java:204] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 81 (http) with context path '' 
2020-01-08 23:30:41.318 [main] [StartupInfoLogger.java:59] INFO  com.tjhnode.DataserviceApplication - Started DataserviceApplication in 8.806 seconds (JVM running for 11.975) 
2020-01-08 23:30:45.690 [http-nio-81-exec-1] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet' 
2020-01-08 23:30:45.691 [http-nio-81-exec-1] [FrameworkServlet.java:524] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet' 
2020-01-08 23:30:45.700 [http-nio-81-exec-1] [FrameworkServlet.java:546] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 9 ms 
2020-01-08 23:32:52.517 [Thread-13] [ExecutorConfigurationSupport.java:208] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor' 
2020-01-08 23:32:52.519 [Thread-13] [DynamicRoutingDataSource.java:182] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - closing dynamicDatasource  ing.... 
2020-01-08 23:32:52.530 [Thread-13] [DruidDataSource.java:1825] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closed 
2020-01-08 23:32:52.537 [Thread-13] [DruidDataSource.java:1825] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4} closed 
2020-01-08 23:32:52.545 [Thread-13] [DruidDataSource.java:1825] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed 
2020-01-08 23:32:52.553 [Thread-13] [DruidDataSource.java:1825] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3} closed 
2020-01-08 23:33:40.356 [main] [StartupInfoLogger.java:50] INFO  com.tjhnode.DataserviceApplication - Starting DataserviceApplication on tjh with PID 11016 (D:\JavaProject\dataservice\target\classes started by My in D:\JavaProject\dataservice) 
2020-01-08 23:33:40.364 [main] [SpringApplication.java:675] INFO  com.tjhnode.DataserviceApplication - No active profile set, falling back to default profiles: default 
2020-01-08 23:33:41.544 [main] [RepositoryConfigurationDelegate.java:244] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode! 
2020-01-08 23:33:41.550 [main] [RepositoryConfigurationDelegate.java:126] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode. 
2020-01-08 23:33:41.592 [main] [RepositoryConfigurationDelegate.java:182] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 27ms. Found 0 repository interfaces. 
2020-01-08 23:33:41.945 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ed4ae103] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 23:33:42.005 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 23:33:42.007 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$56d951d4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 23:33:42.014 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 23:33:42.019 [main] [PostProcessorRegistrationDelegate.java:330] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2020-01-08 23:33:42.420 [main] [TomcatWebServer.java:90] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 81 (http) 
2020-01-08 23:33:42.436 [main] [DirectJDKLog.java:173] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-81"] 
2020-01-08 23:33:42.445 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat] 
2020-01-08 23:33:42.445 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.16] 
2020-01-08 23:33:42.452 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.AprLifecycleListener - Loaded APR based Apache Tomcat Native library [1.2.21] using APR version [1.6.5]. 
2020-01-08 23:33:42.453 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.AprLifecycleListener - APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true]. 
2020-01-08 23:33:42.453 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.AprLifecycleListener - APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true] 
2020-01-08 23:33:43.545 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.AprLifecycleListener - OpenSSL successfully initialized [OpenSSL 1.0.2q  20 Nov 2018] 
2020-01-08 23:33:43.691 [main] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext 
2020-01-08 23:33:43.691 [main] [ServletWebServerApplicationContext.java:296] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3220 ms 
2020-01-08 23:33:43.839 [main] [DynamicDataSourceCreator.java:113] INFO  com.baomidou.dynamic.datasource.DynamicDataSourceCreator - 动态数据源-检测到druid存在,如配置中未指定type,druid会默认配置 
2020-01-08 23:33:45.881 [main] [DruidDataSource.java:930] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1,master} inited 
2020-01-08 23:33:45.972 [main] [DruidDataSource.java:930] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2,appconfig} inited 
2020-01-08 23:33:46.021 [main] [DruidDataSource.java:930] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3,applog} inited 
2020-01-08 23:33:46.093 [main] [DruidDataSource.java:930] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4,app} inited 
2020-01-08 23:33:46.093 [main] [DynamicRoutingDataSource.java:203] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 初始共加载 4 个数据源 
2020-01-08 23:33:46.093 [main] [DynamicRoutingDataSource.java:142] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 动态数据源-加载 appconfig 成功 
2020-01-08 23:33:46.093 [main] [DynamicRoutingDataSource.java:142] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 动态数据源-加载 app 成功 
2020-01-08 23:33:46.094 [main] [DynamicRoutingDataSource.java:142] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 动态数据源-加载 master 成功 
2020-01-08 23:33:46.094 [main] [DynamicRoutingDataSource.java:142] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 动态数据源-加载 applog 成功 
2020-01-08 23:33:46.094 [main] [DynamicRoutingDataSource.java:212] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 appconfig 
2020-01-08 23:33:46.437 [main] [TableInfoHelper.java:250] WARN  com.baomidou.mybatisplus.core.toolkit.TableInfoHelper - Warn: Could not find @TableId in Class: com.tjhnode.dataservice.model.entities.ClassificationModel. 
2020-01-08 23:33:46.533 [main] [TableInfoHelper.java:250] WARN  com.baomidou.mybatisplus.core.toolkit.TableInfoHelper - Warn: Could not find @TableId in Class: com.tjhnode.dataservice.model.entities.ConfigItemModel. 
2020-01-08 23:33:46.575 [main] [TableInfoHelper.java:250] WARN  com.baomidou.mybatisplus.core.toolkit.TableInfoHelper - Warn: Could not find @TableId in Class: com.tjhnode.dataservice.model.entities.Enumparameters. 
2020-01-08 23:33:46.623 [main] [TableInfoHelper.java:250] WARN  com.baomidou.mybatisplus.core.toolkit.TableInfoHelper - Warn: Could not find @TableId in Class: com.tjhnode.dataservice.model.entities.ParametersConfig. 
2020-01-08 23:33:46.667 [main] [TableInfoHelper.java:250] WARN  com.baomidou.mybatisplus.core.toolkit.TableInfoHelper - Warn: Could not find @TableId in Class: com.tjhnode.dataservice.model.entities.SqlConfigModel. 
2020-01-08 23:33:47.286 [main] [PropertySourcedRequestMappingHandlerMapping.java:69] INFO  springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)] 
2020-01-08 23:33:47.475 [main] [ExecutorConfigurationSupport.java:171] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor' 
2020-01-08 23:33:48.126 [main] [DocumentationPluginsBootstrapper.java:147] INFO  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Context refreshed 
2020-01-08 23:33:48.142 [main] [DocumentationPluginsBootstrapper.java:150] INFO  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s) 
2020-01-08 23:33:48.182 [main] [ApiListingReferenceScanner.java:41] INFO  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references 
2020-01-08 23:33:48.381 [main] [CachingOperationNameGenerator.java:40] INFO  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: deleteConfigItemUsingPOST_1 
2020-01-08 23:33:48.392 [main] [CachingOperationNameGenerator.java:40] INFO  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: insertConfigItemUsingPOST_1 
2020-01-08 23:33:48.394 [main] [CachingOperationNameGenerator.java:40] INFO  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator - Generating unique operation named: updateConfigItemUsingPOST_1 
2020-01-08 23:33:48.413 [main] [DirectJDKLog.java:173] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-81"] 
2020-01-08 23:33:48.447 [main] [TomcatWebServer.java:204] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 81 (http) with context path '' 
2020-01-08 23:33:48.451 [main] [StartupInfoLogger.java:59] INFO  com.tjhnode.DataserviceApplication - Started DataserviceApplication in 8.601 seconds (JVM running for 11.67) 
2020-01-08 23:33:55.094 [http-nio-81-exec-1] [DirectJDKLog.java:173] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet' 
2020-01-08 23:33:55.095 [http-nio-81-exec-1] [FrameworkServlet.java:524] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet' 
2020-01-08 23:33:55.103 [http-nio-81-exec-1] [FrameworkServlet.java:546] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 8 ms 
2020-01-08 23:35:20.359 [Thread-13] [ExecutorConfigurationSupport.java:208] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor' 
2020-01-08 23:35:20.363 [Thread-13] [DynamicRoutingDataSource.java:182] INFO  com.baomidou.dynamic.datasource.DynamicRoutingDataSource - closing dynamicDatasource  ing.... 
2020-01-08 23:35:20.373 [Thread-13] [DruidDataSource.java:1825] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-2} closed 
2020-01-08 23:35:20.378 [Thread-13] [DruidDataSource.java:1825] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-4} closed 
2020-01-08 23:35:20.383 [Thread-13] [DruidDataSource.java:1825] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed 
2020-01-08 23:35:20.388 [Thread-13] [DruidDataSource.java:1825] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-3} closed 
